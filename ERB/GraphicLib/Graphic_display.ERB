;********************************************************************************************
;2019/8/14 作成 ロウ@TW夢子口上の人
;
;Licence  :ライセンスフリー(CC0)。
;
;グラフィック表示簡易化ライブラリ
;なんかややこしいグラフィック表示関連を簡単に表示できるようにまとめたもの。
;HTMLもどきだし、可読性悪いし、冗長なので「もう画像指定したら縦幅とか勝手に揃えろよ」っていうことで作りました。
;********************************************************************************************

;********************************************************************************************
;画像表示用関数
;これを呼べば画像の縦横計算とかややこしいことしないで画像を一枚表示できる
;横位置は左揃えの場合は左端から、右揃えの場合は右端から指定したピクセル数分間隔を空ける
;画像反転フラグは 1:横反転 2：縦反転 3:縦横反転
;********************************************************************************************
@画像表示(画像名, 表示位置, 縦位置, 横位置, 拡大比率 = 100, 自動改行 = 0, ボタン生成 = 0, VALUE = "", TITLE = "", マウスオーバー画像名 = "", 画像反転フラグ = 0)
#DIMS 画像名				;リソース名
#DIMS マウスオーバー画像名	;マウスオーバー時に表示する画像名 省略可
#DIMS 表示位置				;表示位置指定文字列
#DIM  縦位置				;ピクセル指定 内部でフォントサイズ基準のパーセンテージに変換する
#DIM  横位置				;上に同じ
#DIM  自動改行				;自動改行有無フラグ デフォルトはしない
#DIM  拡大比率				;パーセンテージ指定 指定しなければ100
#DIM  ボタン生成			;ボタンとして使用するか デフォルトはしない
#DIMS  VALUE				;ボタンのバリュー
#DIMS  TITLE				;マウスオーバー時に表示する文字列
#DIM  画像反転フラグ		;画像反転を行うかのフラグ
#DIMS  表示HTML
IF SPRITECREATED(画像名)
	SIF 描画開始行数 == 0
		描画開始行数 = LINECOUNT

	表示HTML =
	表示HTML += @"%画像表示位置HTML(表示位置)%"

	SIF GROUPMATCH(表示位置, "LEFT", "left", "左")
		表示HTML += @"%横位置HTML(横位置)%"
	SIF ボタン生成
		表示HTML += @"%ボタン生成HTML(VALUE, TITLE)%"

	表示HTML += @"%画像表示単独HTML(画像名, 縦位置, 拡大比率, マウスオーバー画像名, 画像反転フラグ)%"

	SIF ボタン生成
		表示HTML += @"</button>"
	SIF GROUPMATCH(表示位置, "RIGHT", "right", "右")
		表示HTML += @"%横位置HTML(横位置)%"

	DEBUGPRINTFORML %表示HTML%
	HTML_PRINT 表示HTML

	SIF 自動改行
		CALL ピクセル自動改行(縦位置 + デフォルトキャラ画像横幅 * 拡大比率 / 100)
ELSE
	RETURN 0
ENDIF
RETURN 1

;********************************************************************************************
;画像セット関数
;並べて表示したい場合に、画像一斉表示関数と合わせて使用する
;横位置は指定したピクセル数分画像間の間隔を空ける
;********************************************************************************************
@画像セット(画像名, 縦位置, 画像間隔, 拡大比率 = 100, レイヤー階数 = 0, ボタン生成 = 0, VALUE = "", TITLE = "", マウスオーバー画像名 = "", 画像反転フラグ = 0)
#DIMS 画像名				;リソース名
#DIMS マウスオーバー画像名	;マウスオーバー時に表示する画像名 省略可
#DIMS 表示位置				;表示位置指定文字列
#DIM  縦位置				;ピクセル指定 内部でフォントサイズ基準のパーセンテージに変換する
#DIM  画像間隔				;ピクセル指定 内部でフォントサイズ基準のパーセンテージに変換する
#DIM  拡大比率				;パーセンテージ指定 指定しなければ100
#DIM  レイヤー階数			;重ね表示時の階数
#DIM  ボタン生成			;ボタンとして使用するか デフォルトはしない
#DIMS VALUE					;ボタンのバリュー
#DIMS TITLE					;マウスオーバー時に表示する文字列
#DIM  画像反転フラグ		;画像反転を行うかのフラグ 1:横反転 2：縦反転 3:縦横反転

SIF 描画開始行数 == 0
	描画開始行数 = LINECOUNT

;PRINTFORML %画像名%をチェック
IF SPRITECREATED(画像名)
	SIF TEMP_HTML:レイヤー階数 != "" && 画像間隔 > 0
		TEMP_HTML:レイヤー階数 += @"%横位置HTML(画像間隔)%"

	SIF ボタン生成
		TEMP_HTML:レイヤー階数 += @"%ボタン生成HTML(VALUE, TITLE)%"

	TEMP_HTML:レイヤー階数 += @"%画像表示単独HTML(画像名, 縦位置, 拡大比率, マウスオーバー画像名, 画像反転フラグ, レイヤー階数)%"

	SIF ボタン生成
		TEMP_HTML:レイヤー階数 += @"</button>"

	LOCAL = 縦位置 + デフォルトキャラ画像横幅 * 拡大比率 / 100
	SIF LOCAL > TEMP_HTML_MAX_HEIGHT
		TEMP_HTML_MAX_HEIGHT = LOCAL

	SIF MAX_LAYER_NUM < レイヤー階数
		MAX_LAYER_NUM = レイヤー階数
ELSE
	;PRINTFORML ないよ
	RETURN 0
ENDIF
RETURN 1

;********************************************************************************************
;ダミーセット関数
;並べて表示したい場合に、画像一斉表示関数と合わせて使用する
;横位置は指定したピクセル数分画像間の間隔を空ける
;********************************************************************************************
@ダミーセット(縦位置, 画像間隔, 拡大比率 = 100, レイヤー階数 = 0)
#DIM  縦位置				;ピクセル指定 内部でフォントサイズ基準のパーセンテージに変換する
#DIM  画像間隔				;ピクセル指定 内部でフォントサイズ基準のパーセンテージに変換する
#DIM  拡大比率				;パーセンテージ指定 指定しなければ100
#DIM  レイヤー階数			;重ね表示時の階数
#DIM  画像横幅				;フォントサイズ基準のパーセンテージ

;uEmuera環境でエフェクトがずれる際には以下の二行をアンコメント
;CALL 画像セット("ダミー", 縦位置, 画像間隔, 拡大比率, レイヤー階数)
;RETURN 1

SIF TEMP_HTML:レイヤー階数 != "" && 画像間隔 > 0
	TEMP_HTML:レイヤー階数 += @"%横位置HTML(画像間隔)%"

画像横幅 = (デフォルトキャラ画像横幅 * 拡大比率) / GETCONFIG("フォントサイズ")
TEMP_HTML:レイヤー階数 += @"<shape type='space' param='{画像横幅}'>"

LOCAL = 縦位置 + デフォルトキャラ画像横幅 * 拡大比率 / 100
SIF LOCAL > TEMP_HTML_MAX_HEIGHT
	TEMP_HTML_MAX_HEIGHT = LOCAL

SIF MAX_LAYER_NUM < レイヤー階数
	MAX_LAYER_NUM = レイヤー階数

RETURN 1

;********************************************************************************************
;画像一斉表示関数
;並べて表示したい場合に、画像セット関数と合わせて使用する
;レイヤー階数-1で全てのレイヤーを一斉表示する
;********************************************************************************************
@画像一斉表示(表示位置, 横位置, 自動改行 = 0, レイヤー階数 = -1)
#DIMS 表示位置				;表示位置指定文字列
#DIM  横位置				;上に同じ
#DIM DYNAMIC 自動改行		;自動改行有無フラグ デフォルトはしない
#DIM DYNAMIC レイヤー階数	;重ね表示時の階数

IF レイヤー階数 == -1
	FOR レイヤー階数, 0, MAX_LAYER_NUM + 1
		CALL 画像一斉表示(表示位置, 横位置, 0, レイヤー階数)
	NEXT

	SIF 自動改行
		CALL ピクセル自動改行(TEMP_HTML_MAX_HEIGHT)
	CALL 画像描画終了

	RETURN 1
ENDIF

IF TEMP_HTML:レイヤー階数 != ""
	TEMP_HTML:レイヤー階数 = %画像表示位置HTML(表示位置)%%TEMP_HTML:レイヤー階数%

	SIF GROUPMATCH(表示位置, "LEFT", "left", "左")
		TEMP_HTML:レイヤー階数 = %横位置HTML(横位置)%%TEMP_HTML:レイヤー階数%
	SIF GROUPMATCH(表示位置, "RIGHT", "right", "右")
		TEMP_HTML:レイヤー階数 += @"%横位置HTML(横位置)%"

	HTML_PRINT TEMP_HTML:レイヤー階数

	SIF 自動改行
		CALL ピクセル自動改行(TEMP_HTML_MAX_HEIGHT)

	TEMP_HTML:レイヤー階数 =
ELSE
	RETURN 0
ENDIF
RETURN 1

;********************************************************************************************
;画像表示単独のHTML取得関数
;諸々の計算は内部でするので指定するのは画像だけにしたい
;拡大縮小したい場合を考えて一応拡大比率指定出来るように
;********************************************************************************************
@画像表示単独HTML(画像名, 縦位置, 拡大比率 = 100, マウスオーバー画像名 = "", 画像反転フラグ = 0, レイヤー階数 = 0)
#FUNCTIONS
#DIMS 画像名				;リソース名
#DIMS マウスオーバー画像名	;マウスオーバー時に表示する画像名 省略可
#DIM  拡大比率				;パーセンテージ指定 指定しなければ100
#DIM  画像縦幅				;ややこしいがフォントサイズ基準のパーセンテージ
#DIM  画像横幅				;上に同じ
#DIM  縦位置				;ピクセル指定 内部でフォントサイズ基準のパーセンテージに変換する
#DIM  画像反転フラグ		;画像反転を行うかのフラグ 1:横反転 2：縦反転 3:縦横反転
#DIM  レイヤー階数			;重ね表示時の階数

IF SPRITECREATED(画像名)
	IF UEMUERA_FLAG ;[Personal fix]uEmuera 감지기 패치
		画像縦幅 = (デフォルトキャラ画像横幅 * 拡大比率) / GETCONFIG("フォントサイズ") * (GETBIT(画像反転フラグ, 1) ? -1 # 1 )
		画像横幅 = (デフォルトキャラ画像横幅 * 拡大比率) / GETCONFIG("フォントサイズ") * (GETBIT(画像反転フラグ, 0) ? -1 # 1 )
		;切捨て保護のため先に掛け算
		縦位置   = (100 * 縦位置 / GETCONFIG("フォントサイズ")) - (100 * (LINECOUNT-描画開始行数+レイヤー階数) * (GETCONFIG("一行の高さ") / GETCONFIG("フォントサイズ")))

		LOCALS = <img src='%画像名%' \@ マウスオーバー画像名 != "" ? srcb='%マウスオーバー画像名%' # \@ height='{画像縦幅}' width='{画像横幅}' ypos='{縦位置}'>
	ELSE
		画像縦幅 = (デフォルトキャラ画像横幅 * 拡大比率) / 100 * (GETBIT(画像反転フラグ, 1) ? -1 # 1 )
		画像横幅 = (デフォルトキャラ画像横幅 * 拡大比率) / 100 * (GETBIT(画像反転フラグ, 0) ? -1 # 1 )
		;切捨て保護のため先に掛け算
		縦位置   = (100 * 縦位置 / GETCONFIG("フォントサイズ")) - (100 * (LINECOUNT-描画開始行数+レイヤー階数) * (GETCONFIG("一行の高さ") / GETCONFIG("フォントサイズ")))
		LOCALS = <img src='%画像名%' \@ マウスオーバー画像名 != "" ? srcb='%マウスオーバー画像名%' # \@ height='{画像縦幅}px' width='{画像横幅}px' ypos='{縦位置}'>
	ENDIF
	RETURNF LOCALS
ELSE
	PRINTFORML 画像リソースが見つかりません
	RETURNF @""
ENDIF

;********************************************************************************************
;位置揃え指定関数
;PタグがただのALIGNMENT指定用タグと化してるので分離
;戻り値としてＰタグの文字列を返す
;ARGS = 画像表示位置指定文字列
;********************************************************************************************
@画像表示位置HTML(表示位置)
#FUNCTIONS
#DIMS 表示位置
SELECTCASE 表示位置
	CASE "LEFT", "left", "左"
		LOCALS = <p align='left'>
		RETURNF LOCALS
	CASE "CENTER", "center", "中央"
		LOCALS = <p align='center'>
		RETURNF LOCALS
	CASE "RIGHT", "right", "右"
		LOCALS = <p align='right'>
		RETURNF LOCALS
	CASEELSE
		;認識できなかったら左揃え
		LOCALS = <p align='left'>
		RETURNF LOCALS
ENDSELECT

;********************************************************************************************
;ボタン生成関数
;戻り値としてbuttonタグの文字列を返す
;POSはややこしいので使用しない
;********************************************************************************************
@ボタン生成HTML(VALUE, TITLE)
#FUNCTIONS
#DIMS  VALUE		;ボタンのバリュー
#DIMS  TITLE		;マウスオーバー時に表示する文字列
LOCALS = <button
SIF VALUE != ""
	LOCALS += @" value='%VALUE%'"
SIF TITLE != ""
	LOCALS += @" title='%TITLE%'"
LOCALS += @" >"
RETURNF LOCALS

;********************************************************************************************
;横位置指定関数
;いちいち場合分けするのが嫌なので全てshapeで調節する
;戻り値としてshapeタグの文字列を返す
;横位置はピクセル単位での指定
;********************************************************************************************
@横位置HTML(横位置)
#FUNCTIONS
#DIM 横位置		;ピクセル指定 内部でフォントサイズ基準のパーセンテージに変換する

;切捨て保護のため先に掛け算
横位置 = 100 * 横位置 / GETCONFIG("フォントサイズ")

LOCALS = <shape type='space' param='{横位置}'>
RETURNF LOCALS

;********************************************************************************************
;画像合わせ改行関数
;画像に合わせて改行したい場合に使用する
;縦幅をピクセル単位で指定すると、それをぎりぎり内包する行数だけ改行する
;********************************************************************************************
@ピクセル自動改行(縦幅)
#DIM 縦幅
#DIM 行数

;端数切り上げ。演算内容は 縦幅 / GETCONFIG("一行の高さ")
行数 = (縦幅 + GETCONFIG("一行の高さ") - 1) / GETCONFIG("一行の高さ")

FOR LOCAL, 0, 行数 - (LINECOUNT - 描画開始行数)
	PRINTFORML
NEXT
描画開始行数 = 0
RETURN 1

;********************************************************************************************
;画像セット等で変更される変数のリセット
;行ずれの無視、レイヤーの消去に使用
;********************************************************************************************
@画像描画終了
VARSET TEMP_HTML
描画開始行数 = 0
MAX_LAYER_NUM = 0
TEMP_HTML_MAX_HEIGHT = 0