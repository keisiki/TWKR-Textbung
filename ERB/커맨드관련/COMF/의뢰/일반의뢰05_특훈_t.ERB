;존부 함수
;F함수는 TRYCALL계를 사용할 수 없기 때문에 통상 함수로 존부 배열을 만들어버린다
@EXIST_일반의뢰5
#LOCALSIZE 1
#LOCALSSIZE 1

;오브젝트 본체
;여기서 ARG로 건네받는 것은 CLIENT_ID입니다
@일반의뢰5(ARG, O_DATA, V_NAME)
#FUNCTION
#LOCALSIZE 1
#LOCALSSIZE 1
#DIMS O_DATA
#DIMS V_NAME
SELECTCASE O_DATA
CASE "의뢰명"
	CALLF MAKE_STR(V_NAME, "특훈 같이해줘")
CASE "의뢰내용 표시"
	CALLF MAKE_STR(V_NAME, @"%CALLNAME:ARG%의 탄막 특훈을 돕는다")
CASE "의뢰 보수 표시"
	CALLF MAKE_STR(V_NAME, @"%금액표시(500)%")
CASE "의뢰실행 커맨드 이름"
	CALLF MAKE_STR(V_NAME, "특훈이다!")
CASE "의뢰 비고 표시"
	CALLF MAKE_STR(V_NAME, "우선은 특훈을 할 수 있는 트인 장소로 이동하자")

CASE "의뢰내용"
	CALLF MAKE_INT(V_NAME, MAKE_IRAI_DATA(0, "작업"))
CASE "의뢰 서브"
CASE "의뢰기한"
;발생시는 아니고 수탁시에 확정합니다
CASE "의뢰 발생율"
;이것은 다른 일반의뢰와의 상대 확률 어째서 10%가 아닙니다
	CALLF MAKE_INT(V_NAME, 10)
CASE "의뢰 발생 조건"
	;현상의 마을에서는 달성 불능인 유익 거점이 마을의 경우는 제외
	SIF ABL:ARG:전투능력 <= ABL:MASTER:전투능력 && ABL:ARG:친밀 >= 2 && MAIN_MAP != 2
		CALLF MAKE_INT(V_NAME, 1)
CASE "의뢰 수탁 가능 조건"
	IF CFLAG:ARG:연회참가
	;의뢰발생조건에서 마을을 제외할 수 없을 것 같아 이곳에서 제외
	ELSEIF MAIN_MAP == 2
	ELSEIF GET_MAPID(CFLAG:MASTER:현재위치) == MAIN_MAP
		CALLF MAKE_INT(V_NAME, 1)
	ENDIF
CASE "의뢰실행 가능 조건"
	SIF 전투훈련가능(CFLAG:MASTER:현재위치)
		CALLF MAKE_INT(V_NAME, 1)
;성공/실패 처리는 CARRYOUT로 직접 쓴다
;SOURCE나 ITEM 입수, 소비가 번잡하게 되므로
CASE "의뢰 소멸 조건"
	SIF RAND:100 < 30
		CALLF MAKE_INT(V_NAME, 1)
CASE "의뢰인 데리고 나가 가능"
	CALLF MAKE_INT(V_NAME, 1)
ENDSELECT



@IRAI_일반5(CHARA, IRAI_ID, SCENE)
#DIM  CHARA
#DIM  IRAI_ID
#DIMS SCENE
#DIM  CLIENT_ID
#DIM  BAD_WEATHER

CLIENT_ID = IRAI_ID_TO_CLIENT(IRAI_ID)
SELECTCASE SCENE
CASE "의뢰 조건 표시"
;무엇인가 전용의 표시 정보를 마련하고 싶을 시용
;수탁 끝난 의뢰 표시로 사용됩니다
;
;PRINT계만으로 SOURCE라든지는 넣으면 안 돼, WAIT도 없음으로
;여기 이외의표시 항목은
;PRINTFORML 　　　　　：
;되고 있으므로 스페이스를 가지런히 하는 편이 보기에 좋습니다

CASE "의뢰실행시"
;이 CASE에 한정해, RESULT가 의미를 가집니다
;의뢰실행시의 RESULT에는 IRAI_CONST_RESULT()를 사용해 주세요
;가능한 인수는"캔슬", "실행해 성공", "실행해 실패", "실행해 미해결"입니다
;독자 처리를 가르치고 싶을 때는"실행해 미해결"로 유보하자 마자 해 주세요
;
;"의뢰실행시"에 한정하고 말하면, CHARA는 TARGET와 동일하고, 반드시 CLIENT_ID와 일치한다고는 할 수 없습니다
;개개의 케이스로 확인할 필요가 있습니다
;이 의뢰는 「작업」취급이며, CLIENT가 TARGET가 되어 있을 때 마셔 실행할 수 있습니다
;

;날씨를 참조
	BAD_WEATHER = 0
	SELECTCASE TIME:5
	CASE 4, 6, 8, 10, 12, 13
		;악천후
		BAD_WEATHER = 1
	CASE 5, 9
		;위험 있고 날씨
		BAD_WEATHER = 2
	;그 이외
	CASEELSE
		;여름 철은 죽어라
		SIF DAY:2 == 2 && TIME:5 == 1 && INRANGE(TIME, 361, 1019)
			BAD_WEATHER = 3
	ENDSELECT
	SIF !OUTROOF(CFLAG:MASTER:현재위치)
		BAD_WEATHER = 0
	
	PRINTFORMW %마스터는% %타겟과% 탄막 놀이의 특훈을 했다
	SELECTCASE TIME:5
	CASE 4, 6
		PRINTL 빗속 탄막 훈련을 실시했다
		PRINTW 매우 지쳤다
	CASE 1
		IF BAD_WEATHER == 3
			PRINTL 강렬한 직사광선 아래에서 탄막 훈련을 실시했다
			PRINTW 열사병에 걸릴 것 같다…
		ELSE
			PRINTW 구름 한점 없는 푸른 하늘 아래에서 탄막 훈련을 실시했다
		ENDIF
	CASE 5
		PRINTL 격렬한 비가 내리고 거칠어지는 중, 어려운 훈련을 강행했다
		PRINTW 죽을 정도로 지쳤다
	CASE 8, 10, 12, 13
		PRINTL 눈 속에서 탄막의 훈련을 실시했다
		PRINTW 매우 지쳤다
	CASE 9
		PRINTL 눈보라 속에서, 어려운 훈련을 강행했다
		PRINTW 죽을 정도로 지쳤다
	CASEELSE
;		PRINTL 탄막의 훈련을 실시했다
	ENDSELECT
	
	TCVAR:MASTER:공복시각 -= 15
	TCVAR:TARGET:공복시각 -= 15
	DOWNBASE:MASTER:체력 = 100 * (2 + BAD_WEATHER)
	DOWNBASE:MASTER:기력 = 100 * (2 + BAD_WEATHER)
	DOWNBASE:체력 = 50 * (2 + BAD_WEATHER)
	DOWNBASE:기력 = 50 * (2 + BAD_WEATHER)
	SOURCE:환락 = 600 + 100 * (1 + BAD_WEATHER)
	TIME += 60
	EXP:MASTER:전투경험 += 1 + ABL:전투능력
	EXP:전투경험 += MAX(ABL:전투능력 - ABL:MASTER:전투능력 + 1, 1) * 3 + BAD_WEATHER
	CALL 경험치처리(MASTER,200)
	CALL 경험치처리(TARGET,200)
	IF ITEM:전술지도서
		EXP:MASTER:전투경험 ++
		EXP:TARGET:전투경험 ++
		CALL 경험치처리(TARGET,40)
		CALL 경험치처리(MASTER,120)
	ENDIF
	IF ITEM:스포츠드링크 >= 2
		IF BAD_WEATHER == 3
			DOWNBASE:MASTER:체력 -= 200
			DOWNBASE:MASTER:기력 -= 300
			DOWNBASE:체력 -= 70
			DOWNBASE:기력 -= 100
		ELSE
			DOWNBASE:MASTER:체력 -= 50
			DOWNBASE:MASTER:기력 -= 50
			DOWNBASE:체력 -= 20
			DOWNBASE:기력 -= 20
		ENDIF
		SOURCE:환락 += 1000
		PRINTL 훈련 후에 둘이서 스포츠드링크를 마셨다
		PRINTW 지친 몸에 수분이 스며든다…
		ITEM:스포츠드링크 -= 2
		;원래 구문이라면 소비는 1개 같지만 2개에
	ENDIF
	RETURN IRAI_CONST_RESULT("실행해 성공")
CASE "의뢰 성공시"
;성공 보고시의 보수 등
	CALL CHANGE_CFLAG(2, TARGET, 30)
	CALL CHANGE_CFLAG(4, TARGET, 20)
	CALL GET_MONEY_YEN(500, 2)
CASE "의뢰 실패시"
;실패 보고시의 처리
	CALL CHANGE_CFLAG(2, TARGET, -10)
	CALL CHANGE_CFLAG(4, TARGET, -10)
ENDSELECT
