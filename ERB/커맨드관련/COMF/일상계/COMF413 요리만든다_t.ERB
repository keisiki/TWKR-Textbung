;-------------------------------------------------
;요리를만든다
;일상계 커맨드, 레벨 1
;-------------------------------------------------
@COM413
CALL RESET_DISH
;식재료가 없다
;먼저 조수 취득
IF TARGET <= 0
ELSEIF SHIRAHU(TARGET) == 1 && ABL:친밀 * 500 + ABL:순종 * 500 + ABL:요리기능 * 1000 > CFLAG:310 - CFLAG:MASTER:310
	DISH_ASSI = TARGET
ENDIF
CALL 요리하기


SIF RESULT == -1
	RETURN -1





;도마 보정으로 맛있게 할 수 있다
IF ITEM:은행나무도마
	SELECTCASE ITEM:은행나무도마
		CASE 1
			DISH_BASEPOINT += RAND:3
		CASE 2
			DISH_BASEPOINT += MAX(RAND:3, 1)
		CASE 3
			DISH_BASEPOINT += MAX(RAND:4, 1)
	ENDSELECT
	;PRINTFORML 식칼이 치는 도마가 기분 좋은 소리는 내고 있다…
ENDIF

IF TFLAG:194 == 1
	DOWNBASE:MASTER:체력 = 50
	DOWNBASE:MASTER:기력 = 50
	TIME += 15
	SIF CFLAG:동행
		CFLAG:동행 += 15
ELSEIF TFLAG:194 == 2
	DOWNBASE:MASTER:체력 = 100
	DOWNBASE:MASTER:기력 = 100
	TIME += 45
	SIF CFLAG:동행
		CFLAG:동행 += 45
ELSEIF TFLAG:194 == 3
	DOWNBASE:MASTER:체력 = 100
	DOWNBASE:MASTER:기력 = 100
	TIME += 45
	SIF CFLAG:동행
		CFLAG:동행 += 45
ELSEIF TFLAG:194 == 4
	DOWNBASE:MASTER:체력 = 150
	DOWNBASE:MASTER:기력 = 150
	TIME += 45
	SIF CFLAG:동행
		CFLAG:동행 += 45
ENDIF

IF TARGET > 0 && !CFLAG:수면 && !FLAG:70
	IF DISH_ASSI
		TFLAG:193 = 1
		EXP:요리경험 ++
	ELSE
		TFLAG:193 = 0
	ENDIF
	;고정으로 획득하는 소스
	SOURCE:환락 = 200
	
	;신뢰
	TFLAG:98 = 3


	;ABL:순종을 본다
	IF ABL:순종 <= 1
		SOURCE:환락 += (ABL:순종 * 60)
	ELSEIF ABL:순종 <= 3
		SOURCE:환락 += 200 + (ABL:순종 * 60)
	ELSEIF ABL:순종 <= 5
		SOURCE:환락 += 500 + (ABL:순종 * 60)
	ELSEIF ABL:순종 <= 8
		SOURCE:환락 += 750 + (ABL:순종 * 75)
	ELSEIF ABL:순종 <= 11
		SOURCE:환락 += 1000 + (ABL:순종 * 75)
	ELSE
		SOURCE:환락 += 2000 + (ABL:순종 * 30)
	ENDIF

	;호감도를 본다
	IF CFLAG:2 <= 500
		SOURCE:환락 += CFLAG:2
	ELSEIF CFLAG:2 <= 5000
		SOURCE:환락 += 500 + (CFLAG:2 - 500) / 3
	ELSE
		SOURCE:환락 += 2000 + (CFLAG:2 - 5000) / 5
	ENDIF
	SIF SOURCE:환락 < 0
		SOURCE:환락 = 0
ENDIF

;SIF TARGET < 1 && (!GET_OPTION_COOKING("자동 맛내기 설정") || GET_OPTION_COOKING("이물 혼입 가능") || GET_OPTION_COOKING("약물 혼입 가능"))
;	CALL MIX_MENU
;SIF GET_OPTION_COOKING("자동 맛내기 설정")
;	CALL AUTO_SEASONING

IF ITEM:조리지도서
	SIF !RAND:2
		EXP:MASTER:요리경험 ++
	SIF !RAND:2 && TARGET
		EXP:TARGET:요리경험 ++
ENDIF
DISH_TIME = 1440 * DAY + TIME

STAIN:MASTER:0 = 0
STAIN:MASTER:1 = 0
CFLAG:MASTER:구내정액 = 0
CFLAG:MASTER:안면정액 = 0
CFLAG:MASTER:손에정액 = 0
IF TARGET
	STAIN:0 = 0
	STAIN:1 = 0
	CFLAG:구내정액 = 0
	CFLAG:안면정액 = 0
	CFLAG:손에정액 = 0
ENDIF

RETURN 1


;-------------------------------------------------
;요리를 만드는 함수라고 해도 대부분의 정보는 이미 설정된 상태이다
;여기서는 조리부분을 처리
;-------------------------------------------------
@DISH_COOKING
#DIM 도구력
#DIM 보너스점수
#DIM 감점
;혹시 모르니 최종 체크
SIF DISH_NAME == ""
	THROW
SIF DISH_TYPE == ""
	THROW
SIF !DISH_TIME
	THROW

PRINTFORMW \@ DISH_ASSI ? %조사처리(CALLNAME:DISH_ASSI,"와")% # \@【%DISH_NAME%】%조사만처리(DISH_NAME,"을")% 만듭니다
PRINTFORML ・
PRINTFORML ・・・
SIF DISH_TIME > 10
	PRINTFORML ・・・・・・
SIF DISH_TIME > 30
	PRINTFORML ・・・・・・・・・・・・
;꼬임
IF DISH_TYPE == "경식"
	CALL COOKING_TAKARI([[유유코]], 5)
	CALL COOKING_TAKARI([[시온]], 5)
ELSEIF DISH_TYPE == "주식"
	CALL COOKING_TAKARI([[유유코]], 10)
	CALL COOKING_TAKARI([[시온]], 10)
ENDIF

;TASTE 설정
SIF FLAG:역극
	CALL DISH_TASTE_FROM_CHARA(FLAG:역극)
SIF DISH_ASSI
	CALL DISH_TASTE_FROM_CHARA(DISH_ASSI)
DISH_TASTE += "갓만든/"
DISH_TASTE += DISH_NAME + "/"
DISH_TASTE += DISH_TYPE + "/"
;[연습]은 계절에 맞지 않는 것을 지움
SIF STRCOUNT(DISH_TASTE, "연습/")
	DISH_TASTE '= REPLACE(DISH_TASTE, "철지난\/", "")
;[중립온도]는 여름에만 차갑다(소바, 우동 등）
IF STRCOUNT(DISH_TASTE, "중립온도/")
	IF GET_MONTH() == "여름의 달"
		DISH_TASTE '= REPLACE(DISH_TASTE, "중립온도\/", "차가운/")
	ELSE
		DISH_TASTE '= REPLACE(DISH_TASTE, "중립온도\/", "따뜻한/")
	ENDIF
ENDIF
;신선도 설정, 조리 시간을 추가해 둔다.
DISH_LIMIT = DISH_MAXLIMIT + DISH_TIME

;표시용 요리명 설정
EX_DISH_NAME = 
SIF DISH_ASSI
	EX_DISH_NAME += CALLNAME:DISH_ASSI + @"%조사만처리(CALLNAME:DISH_ASSI,"와")% 만든 "
IF STRCOUNT(DISH_TASTE, "메이드류/")
	EX_DISH_NAME += "메이드류 "
ELSEIF STRCOUNT(DISH_TASTE, "텐구류/")
	EX_DISH_NAME += "텐구류 "
ELSEIF STRCOUNT(DISH_TASTE, "명계풍/")
	EX_DISH_NAME += "명계풍 "
ELSEIF STRCOUNT(DISH_TASTE, "천계풍/")
	EX_DISH_NAME += "천계풍 "
ELSEIF STRCOUNT(DISH_TASTE, "지저풍/")
	EX_DISH_NAME += "지저풍 "
ELSEIF STRCOUNT(DISH_TASTE, "지옥풍/")
	EX_DISH_NAME += "지옥풍 "
ELSEIF STRCOUNT(DISH_TASTE, "축생류/")
	EX_DISH_NAME += "축생류 "
ELSEIF STRCOUNT(DISH_TASTE, "달도시풍/")
	EX_DISH_NAME += "달도시풍 "
ELSEIF STRCOUNT(DISH_TASTE, "옥토끼풍/")
	EX_DISH_NAME += "옥토끼풍 "
ELSEIF STRCOUNT(DISH_TASTE, "마계풍/")
	EX_DISH_NAME += "마계풍 "
ELSEIF STRCOUNT(DISH_TASTE, "몽환풍/")
	EX_DISH_NAME += "몽환풍 "
ELSEIF STRCOUNT(DISH_TASTE, "외계풍/")
	EX_DISH_NAME += "외계풍 "
ELSEIF STRCOUNT(DISH_TASTE, "화학적/")
	EX_DISH_NAME += "화학적 "
ELSEIF STRCOUNT(DISH_TASTE, "소인족 비전의 맛/")
	EX_DISH_NAME += "소인족 비전의 "
ELSEIF STRCOUNT(DISH_TASTE, "히에다가 비전의 맛/")
	EX_DISH_NAME += "히에다가 비전의 "
ELSEIF STRCOUNT(DISH_TASTE, "순화된맛/")
	EX_DISH_NAME += "순화된 "
ELSEIF STRCOUNT(DISH_TASTE, "역전/")
	EX_DISH_NAME += "역전된 "
ELSEIF STRCOUNT(DISH_TASTE, "대화력/")
	EX_DISH_NAME += "대화력 "
ELSEIF STRCOUNT(DISH_TASTE, "빙결/")
	EX_DISH_NAME += "빙결 "
ELSEIF STRCOUNT(DISH_TASTE, "몰카맛/")
	EX_DISH_NAME += "몰카 "
ELSEIF STRCOUNT(DISH_TASTE, "미지의맛/")
	EX_DISH_NAME += "불가사의한 "
ELSEIF STRCOUNT(DISH_TASTE, "반짝임/")
	EX_DISH_NAME += "반짝이는 "
ELSEIF STRCOUNT(DISH_TASTE, "생명력/")
	EX_DISH_NAME += "요정의 "
ELSEIF STRCOUNT(DISH_TASTE, "선술/")
	EX_DISH_NAME += "선인의 "
ELSEIF STRCOUNT(DISH_TASTE, "오니의마력/")
	EX_DISH_NAME += "오니의 "
ELSEIF STRCOUNT(DISH_TASTE, "피의마력/")
	EX_DISH_NAME += "흡혈귀의 "
ELSEIF STRCOUNT(DISH_TASTE, "마력/")
	EX_DISH_NAME += "마법의 "
ELSEIF STRCOUNT(DISH_TASTE, "요력/")
	EX_DISH_NAME += "요사로운 "
ELSEIF STRCOUNT(DISH_TASTE, "영장/")
	EX_DISH_NAME += "영적 "
ELSEIF STRCOUNT(DISH_TASTE, "비술/")
	EX_DISH_NAME += "미스틱한 "
ENDIF
IF STRCOUNT(DISH_TASTE, "야채 빼기/")
	IF DISH_NAME == "야채볶음"
		EX_DISH_NAME += "야채를 뺀 야채볶음"
	ELSEIF DISH_NAME == "나물"
		EX_DISH_NAME += "나물없음"
	ELSEIF DISH_NAME == "채소절임 곱빼기밥"
		EX_DISH_NAME += "곱빼기밥"
	ELSEIF DISH_NAME == "모짜렐라 치즈와 토마토의 샐러드"
		EX_DISH_NAME += "모짜렐라 치즈만의 샐러드"
	ELSE
		EX_DISH_NAME += "야채 빼기 "
		EX_DISH_NAME += DISH_NAME
	ENDIF
ELSE
	EX_DISH_NAME += DISH_NAME
ENDIF
PRINTFORML ＜%EX_DISH_NAME%＞
CALL SHOW_TASTE(DISH_TASTE, "DISH_DATA")

;기본 점수 계산
도구력 = ITEM:은행나무도마
보너스점수 = 0
감점 = 0
SIF STRCOUNT(DISH_TASTE, "도구의공명/")
	TIMES 도구력, 2.0

SIF STRCOUNT(DISH_TASTE, "제철/")
	보너스점수 += 2
SIF STRCOUNT(DISH_TASTE, "옥토끼풍/") && STRCOUNT(DISH_TASTE, "당근/")
	보너스점수 += 2
SIF STRCOUNT(DISH_TASTE, "프로의 맛/")
	보너스점수 += 2
SIF STRCOUNT(DISH_TASTE, "반짝임/")
	보너스점수 += 1
;자신있는 요리나 날카로움은 해당되지 않을 경우 소거되어 있으므로 이것으로 OK, 자신있는 요리는 "/"를 제외합니다.
SIF STRCOUNT(DISH_TASTE, "특기요리")
	보너스점수 += 2
SIF STRCOUNT(DISH_TASTE, "섬세한맛/")
	보너스점수 += 1
SIF STRCOUNT(DISH_TASTE, "맛있는물/")
	보너스점수 += 1
;질투,숨겨진 맛의 효과는 먹을 때

SIF DISH_DRG
	감점 += 1
SIF DISH_DRG_2
	감점 += 1

;DISH_ASSI가 0이면 MASTER니까 분기 필요없지만 일단
IF DISH_ASSI
	DISH_BASEPOINT = ABL:MASTER:요리기능 + ABL:DISH_ASSI:요리기능 + DISH_RANK + 도구력 + 보너스점수 - 감점
	DISH_BASEPOINT = MIN(300 + (DISH_BASEPOINT * 20), 700)
	PRINTFORM 솜씨：
	CALL 만듦새(DISH_BASEPOINT)
	PRINTFORML 　／%CALLNAME:MASTER%의 능력({ABL:MASTER:요리기능}) + %CALLNAME:DISH_ASSI%의 능력({ABL:DISH_ASSI:요리기능}) + 식재료의 품질({DISH_RANK}) \@ 도구력 ? + 도구의 품질({도구력}) # \@ \@ 보너스점수 ? + 보너스점수({보너스점수}) # \@ \@ 감점 ? - 첨가물({감점}) # \@
ELSE
	DISH_BASEPOINT = ABL:MASTER:요리기능 + ABL:MASTER:요리기능 + DISH_RANK + 도구력 + 보너스점수 - 감점
	DISH_BASEPOINT = MIN(300 + (DISH_BASEPOINT * 20), 700)
	PRINTFORM 솜씨：
	CALL 만듦새(DISH_BASEPOINT)
	PRINTFORML 　／%CALLNAME:MASTER%의 능력 x 2({ABL:MASTER:요리기능 * 2}) + 식재료의 품질({DISH_RANK}) \@ 도구력 ? + 도구의 품질({도구력}) # \@ \@ 보너스점수 ? + 보너스점수({보너스점수}) # \@ \@ 감점 ? - 첨가물({감점}) # \@
ENDIF
PRINTL 

IF STRCOUNT(DISH_TASTE, "로터/")
	TFLAG:194 = 100
ELSEIF DISH_TYPE == "디저트"
	TFLAG:194 = 3
ELSEIF DISH_TYPE == "주식"
	TFLAG:194 = 2
ELSE
	TFLAG:194 = 1
ENDIF

;WAIT
;-------------------------------------------------
;실행 판정
;-------------------------------------------------
@COM_ABLE413
;정지 중에는 불가
SIF FLAG:70 == 1
	RETURN 0
;청소 실행 판정
SIF !TFLAG:100
	RETURN 0
;일괄관리
SIF GLOBAL_COMABLE(413)
	RETURN RESULT

;주방인가
SIF !KITCHEN(CFLAG:MASTER:현재위치) && ITEM:911==0 ;KR판 고유기능 간편 요리 도구
	RETURN 0
;기력 0
SIF BASE:MASTER:기력 <= 0
	RETURN 0
SIF CFLAG:우후후
	RETURN 0
;동침중
SIF CFLAG:동침중
	RETURN 0
;장난중
SIF CFLAG:MASTER:장난
	RETURN 0
;이미 요리를 만들고 있다
SIF DISH_NAME != ""
	RETURN 0
RETURN 1

;-------------------------------------------------
;メニュー表示用の関数
;ARGS     DISH_TYPE
;RESULT   2=改行した,1=表示した,0=表示しない
;-------------------------------------------------
@SHOW_DISH_MENU(DISH_NUM, ARGS, SELECT_MENU, MENUCOUNT)
#DIM DISH_NUM
#DIM SELECT_MENU
#DIM MENUCOUNT
;요리データを呼ぶ
CALL DISHDATA(DISH_NUM, ARGS)
;作れなくてもグレーで表示する,選択中なら赤
IF RESULT
	IF RESULT < 10 && SELECT_MENU == DISH_NUM
		SETCOLOR C_RED
	ELSEIF RESULT < 10
		SETCOLOR C_GRAY
	ELSEIF SELECT_MENU == DISH_NUM
		SETCOLOR C_AQUA
	ELSEIF STRCOUNT(DISH_TASTE, "제철/") || STRCOUNT(DISH_TASTE, "길한물건/") || STRCOUNT(DISH_TASTE, "태풍고로케/")
		SETCOLOR C_CREAM
	ENDIF
	PRINTFORM [{DISH_NUM, 3}]%DISH_NAME,35, LEFT%
	RESETCOLOR
	;改行したらRESULT = 2,表示したらRESULT = 1
	IF (MENUCOUNT + 1) % 3 == 0
		PRINTL 
		RETURN 2
	ELSE
		RETURN 1
	ENDIF
ENDIF
RETURN 0

-------------------------------------------------
;맛의 표시용 함수
;맛에 한하지 않고 사용해 돌릴 수 있는 그렇게?
;가로폭의 한계에 주의
;-------------------------------------------------
@SHOW_TASTE(TASTE_STR, PRINT_TYPE, INVISIBLE)
#DIMS TASTE_STR               ;표시 대상의 맛데이터
#DIMS DYNAMIC TASTE_LIST, 100 ;미 리스트
#DIM  DYNAMIC TASTE_CNT,  100 ;미 리스트 각 요소의 중복 개수
#DIM  DYNAMIC TASTE_NUM       ;미의 종류의 총수
#DIM  DYNAMIC SHOW_NUM        ;표시한 맛의 수
#DIM  TASTE_ID                ;루프용
#DIMS PRINT_TYPE				;好き嫌いで高Lvを赤くしたり青くしたり
#DIM INVISIBLE					;これが真だと？？？？表示にする　친밀が足りない時非表示など

VARSET RESULTS
SPLIT TASTE_STR, "＊", RESULTS
IF RESULTS:1 != "" && PRINT_TYPE != "DISH_DATA"
	LOCALS = [특기요리：%RESULTS:1%]
	SETCOLOR C_CREAM
	PRINTFORM 　%LOCALS, 20%
	RESETCOLOR
	SHOW_NUM ++
ENDIF
;맛리스트의 취득
CALLF CNT_SPLIT(TASTE_STR, TASTE_LIST, TASTE_CNT, TASTE_NUM)
;맛리스트의 표시
FOR TASTE_ID, 0, TASTE_NUM
	SIF !STRLENS(TASTE_LIST:TASTE_ID)
		CONTINUE
	;요리の情報を見る時用
	IF PRINT_TYPE == "DISH_DATA"
		SIF TASTE_CNT:TASTE_ID >= 2
			SETCOLOR C_L_GREEN
		SIF TASTE_CNT:TASTE_ID >= 3
			SETCOLOR 0xffff96
		SIF TASTE_CNT:TASTE_ID >= 5
			SETCOLOR 0xffc8c8
		IF GROUPMATCH(TASTE_LIST:TASTE_ID, "보너스", "제철", "길한물건", "태풍고로케")
			SETCOLOR C_YELLOW
			PRINTFORM [★%TASTE_LIST:TASTE_ID%]
		ELSEIF GROUPMATCH(TASTE_LIST:TASTE_ID, "철지난")
			SETCOLOR C_RED
			PRINTFORM [%TASTE_LIST:TASTE_ID%]
		ELSEIF GROUPMATCH(TASTE_LIST:TASTE_ID, "정력", "약효", "오니의마력", "피의마력", "인챈트", "가호", "기적", "행운", "풍요")
			SETCOLOR C_GREEN
			PRINTFORM [%TASTE_LIST:TASTE_ID%]
		;表示しないもの
		ELSEIF STRCOUNT(TASTE_LIST:TASTE_ID, DISH_NAME)
		ELSEIF STRCOUNT(TASTE_LIST:TASTE_ID, DISH_TYPE) && DISH_TYPE != "디저트"
		ELSEIF STRCOUNT(TASTE_LIST:TASTE_ID, "특기요리")
		ELSEIF STRCOUNT(TASTE_LIST:TASTE_ID, "중립")
		;伏せる
		ELSEIF (STRCOUNT(TASTE_STR, "몰카맛") || STRCOUNT(TASTE_STR, "미지의맛")) && GROUPMATCH(TASTE_LIST:TASTE_ID, "단", "매운", "짠", "시큼한")
			SETCOLOR C_P_PURPLE
			PRINTFORM [？？？]
		;通常
		ELSE
			PRINTFORM [%TASTE_LIST:TASTE_ID%]
		ENDIF
		RESETCOLOR
		SHOW_NUM ++
		;改行はしない
	;助손効果を見る時用
	ELSEIF PRINT_TYPE == "ASSIDATA"
		IF GROUPMATCH(TASTE_LIST:TASTE_ID, "정력", "약효", "오니의마력", "피의마력", "인챈트", "가호", "기적", "행운", "풍요")
			SETCOLOR C_YELLOW
			LOCALS = [%TASTE_LIST:TASTE_ID%]　　
		;表示しないもの
		ELSEIF STRCOUNT(TASTE_LIST:TASTE_ID, "특기요리")
			CONTINUE
		ELSE
			LOCALS = [%TASTE_LIST:TASTE_ID%]　　
		ENDIF
		PRINTFORM 　%LOCALS, 20%
		RESETCOLOR
		SHOW_NUM ++
		SIF SHOW_NUM % 5
			CONTINUE
		PRINTFORML 
	;キャラの好みを見る時用
	ELSE
		IF TASTE_CNT:TASTE_ID >= 2
			IF PRINT_TYPE == "POSITIVE"
				SETCOLOR C_GREEN
			ELSEIF PRINT_TYPE == "NEGATIVE"
				SETCOLOR C_ORANGE
			ENDIF
		ENDIF
		IF TASTE_CNT:TASTE_ID >= 5
			IF PRINT_TYPE == "POSITIVE"
				SETCOLOR C_AQUA
			ELSEIF PRINT_TYPE == "NEGATIVE"
				SETCOLOR C_RED
			ENDIF
		ENDIF
		LOCALS = [%TASTE_LIST:TASTE_ID%]Lv{TASTE_CNT:TASTE_ID, 2}
		SIF INVISIBLE
			LOCALS = [？？？？]Lv{TASTE_CNT:TASTE_ID, 2}
		;시스템측에서 6 문자, 맛명칭에 14 문자분을 깨어 앞
		PRINTFORM 　%LOCALS, 20%
		RESETCOLOR
		SHOW_NUM ++
		SIF SHOW_NUM % 5
			CONTINUE
		PRINTFORML 
	ENDIF
NEXT
IF PRINT_TYPE == "DISH_DATA"
	PRINTL 
ELSE
	SIF SHOW_NUM % 5
		PRINTFORML 
ENDIF

;-------------------------------------------------
;요리の만듦새を表示する関数
;-------------------------------------------------
@만듦새(ARG)
CHKFONT "ＭＳ P明朝"
SIF RESULT
	SETFONT "ＭＳ P明朝"
FONTBOLD
SELECTCASE ARG
CASE IS < 400
	SETCOLOR C_RED
	PRINT 【악】
CASE IS < 500
	SETCOLOR C_ORANGE
	PRINT 【빈】
CASE IS < 600
	SETCOLOR C_YELLOW
	PRINT 【양】
CASEELSE
	SETCOLOR C_PINK
	PRINT 【미】
ENDSELECT
SETFONT 
FONTREGULAR
RESETCOLOR

;-------------------------------------------------
;요리情報をリ세트する関数
;-------------------------------------------------
@RESET_DISH
주문내용_술 = 0
주문_알코올 = 0
DISH_NAME = 
DISH_TASTE = 
DISH_TYPE = 
DISH_COMMENT = 
VARSET DISH_ING, -1
DISH_TIME = 0
DISH_DRG = 0
DISH_DRG_2 = 0
DISH_ASSI = 0
EX_DISH_NAME = 
DISH_BASEPOINT = 0
DISH_LIMIT = 0
FLAG:요리 = 0
DISHNAME = 

;-------------------------------------------------
;요리中にたかりに来る関数
;-------------------------------------------------
@COOKING_TAKARI(ARG, 확률)
#DIM 확률

;タカらない
IF !CAN_TAKARI(ARG)
	확률 = 0
;내방중이라면 100%
ELSEIF AT_HOME(ARG) && !CFLAG:ARG:신사거주
	확률 = 100
;같은 거점이라면 2분의 1
ELSEIF AT_HOME(ARG) && CFLAG:ARG:신사거주
	확률 = 확률 * 1 / 2
ENDIF

;확률
SIF 확률 < RAND:100
	RETURN

IF FLAG:감방남은일수 == 0
	CFLAG:ARG:거점내방 = 1
	CFLAG:ARG:현재위치 = CFLAG:MASTER:현재위치
	TCVAR:ARG:가능한한움직이지않는다 = 1
	PRINTFORML 요리하는 낌새를 알아채고 %ARG가% 왔다……
ENDIF

;-------------------------------------------------
;たかれるかの判定関数
;-------------------------------------------------
@CAN_TAKARI(ARG)
#FUNCTION
;活動時間-1h外
SIF !BETWEENTIME(CFLAG:ARG:내방시간, CFLAG:ARG:귀가시간 - 60)
	RETURNF 0
;MASTERが外
SIF !AT_HOME(MASTER)
	RETURNF 0
;초대방
SIF CFLAG:MASTER:현재위치 == OMANEKIBEYA()
	RETURNF 0
;MASTERと同じ場所
SIF CFLAG:ARG:현재위치 == CFLAG:MASTER:현재위치
	RETURNF 0
;寝てる
SIF CFLAG:ARG:수면
	RETURNF 0
;仕事中
SIF CFLAG:ARG:행동 == 5
	RETURNF 0
RETURNF 1

;-------------------------------------------------
;구상等で即席요리를 만든다関数
;食材は消費せず、DISH_ING:1を使用する
;CHARA１人のみの効果を得る
;道具の効果は得られない
;ARGS 연습用
;-------------------------------------------------
@요리생성(요리명, CHARA, ARGS)
#DIMS 요리명
#DIM CHARA
#DIM DISH_NUM
#DIM 보너스점수
CALL RESET_DISH
CALL 요리번호출력(요리명, "요리생성")
DISH_NUM = RESULT
DISH_TYPE = %RESULTS:1%
DISH_RANK = 식재레밸(DISH_ING:1)
;DISHNAMEは구上でのみ使用してください
DISHNAME = %DISH_NAME%
FLAG:요리 = DISH_NUM

CALL DISH_TASTE_ADD(DISH_ING:1)
IF !CHARA && FLAG:역극
	CALL DISH_TASTE_FROM_CHARA(FLAG:역극)
ELSE
	CALL DISH_TASTE_FROM_CHARA(CHARA)
ENDIF
SIF ARGS == "연습"
	DISH_TASTE += "연습/"
DISH_TASTE += "갓만든/"
DISH_TASTE += DISH_NAME + "/"
SIF STRCOUNT(DISH_TASTE, "연습/")
	DISH_TASTE '= REPLACE(DISH_TASTE, "철지난\/", "")
DISH_LIMIT = DISH_MAXLIMIT
EX_DISH_NAME = %DISH_NAME%
보너스점수 = 0
SIF STRCOUNT(DISH_TASTE, "제철/")
	보너스점수 += 2
SIF STRCOUNT(DISH_TASTE, "길한물건/")
	보너스점수 += 2
SIF STRCOUNT(DISH_TASTE, "태풍고로케/")
	보너스점수 += 2
SIF STRCOUNT(DISH_TASTE, "옥토끼풍/") && STRCOUNT(DISH_TASTE, "당근/")
	보너스점수 += 2
SIF STRCOUNT(DISH_TASTE, "프로의 맛/")
	보너스점수 += 2
SIF STRCOUNT(DISH_TASTE, "특기요리")
	보너스점수 += 2
SIF STRCOUNT(DISH_TASTE, "반짝임/")
	보너스점수 += 1
SIF STRCOUNT(DISH_TASTE, "섬세한맛/")
	보너스점수 += 1
SIF STRCOUNT(DISH_TASTE, "맛있는물/")
	보너스점수 += 1
DISH_BASEPOINT = ABL:CHARA:요리기능 * 2 + DISH_RANK + 보너스점수
DISH_BASEPOINT = MIN(300 + (DISH_BASEPOINT * 20), 700)

;-------------------------------------------------
;요리명から요리番号を逆算する関数
;요리생성しないならリ세트する
;気軽に使えません。要注意。
;-------------------------------------------------
@요리번호출력(요리명, 生成)
#DIMS 요리명
#DIMS 生成
#DIM 結果保存
結果保存 = 0
FOR LOCAL, 101, 600
	CALL DISHDATA(LOCAL)
	IF DISH_NAME == 요리명
		結果保存 = LOCAL
		BREAK
	ENDIF
NEXT
SIF 生成 != "요리생성" || !結果保存
	CALL RESET_DISH
VARSET RESULT
RETURN 結果保存
