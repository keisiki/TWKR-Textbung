;Synonyms and related generators for repeated words

;------------------------------------------------------------
;Generator for semen
;ARG reserved for future use for checking chara talent
;ARG:1 for additional description
;ARG:2 for capitalization
;------------------------------------------------------------
@SEMEN(ARG = -1,ARG:1,ARG:2)
#FUNCTIONS
LOCALS = 
IF ARG:1
	SELECTCASE RAND:26
		CASE 1 TO 5
			LOCALS += "warm"
		CASE 6 TO 11
			LOCALS += "hot"
		CASE 12 TO 16
			LOCALS += "sticky"
		CASE 16 TO 19
			LOCALS += "thick"
		CASEELSE
			LOCALS += @"%SPLIT_G("smelly:stinky:white:viscous:cloudy:bitter:salty::::")%"
	ENDSELECT
	;putting a space
	SIF LOCALS != ""
		LOCALS += " "
	IF ARG >= 0
		SIF TALENT:ARG:농후정액 && !RAND:3
			LOCALS = %SPLIT_G("incredibly :very :massively :abnormally :::")%%SPLIT_G("fertile :virile :rich :thick :viscous ")%
		SIF !TALENT:ARG:비동정 && !RAND:3
			LOCALS = %SPLIT_G("virgin ")%
	ENDIF
ENDIF

SELECTCASE RAND:13
CASE 0 TO 4
	LOCALS += "semen"
CASE 5 TO 9
	LOCALS += "cum"
CASEELSE
	LOCALS += @"%SPLIT_G("spunk:seed:sperm:jizz")%"
ENDSELECT

IF !ARG:2
	RETURNF LOCALS
ELSE
	RETURNF CAPITALIZE(LOCALS)
ENDIF

;--------------------------------------------------------
;Retarded hentai moan generator
;ARGS will determine how retarded we'll go, Light, Mild or Heavy (Random too)
;shortened versions can be used: l, m, h, r
;Capitalized by default, ARG = 1 to remove it, ARG = 2 to make everything BIG, ARG = 3 - capitalize (default), ARG = 4 - random capitalization, ARG = 5 capitalize every word
;ARG:1 is to set how many time to repeat it, only same mode is supported
;Default is Light
;--------------------------------------------------------
@MOAN(ARGS = "l", ARG = 3, ARG:1 = 0, ARGS:1 = "")
#FUNCTIONS
#DIMS DYNAMIC strMode
#DIMS DYNAMIC strOut

#DIM DYNAMIC nNameCount
#DIM DYNAMIC nHeartCount
#DIM DYNAMIC nInitCount

#DIMS DYNAMIC strFlag

VARSET LOCAL

SIF SPLIT_CHECK(ARGS:1, "name")
	nNameCount = RAND(1, 4)
SIF SPLIT_CHECK(ARGS:1, "heart")
	nHeartCount = RAND(1, 4)
nInitCount = nNameCount + nHeartCount

DO
	strMode '= SPLIT_G(ARGS:0)
	DO
		strFlag '= SPLIT_G(MATCH_SPLIT(ARGS:1, "charname_"), "_")
	LOOP strFlag == "charname"
	SIF SPLIT_CHECK(ARGS:1, "const")
		strFlag += ":const"
	SIF SPLIT_CHECK(ARGS:1, "HPH")
		strFlag += ":HPH"

	IF strMode == "rand" || strMode == "r"
		IF RAND:10 >= 4
			strMode = l
		ELSEIF RAND:10 >= 6
			strMode = m
		ELSE
			strMode = h
		ENDIF
	ENDIF

	SELECTCASE strMode
		CASE "light", "l", ""
			LOCALS = %SPLIT_G("Hn:Hn:Hn:Ahn:Ha:Ha:Ha:Hah:Ah:Ah:Ah:Ah:Auu:Hii:Fuah:Ngh:Mm:Haa:Aah:Nn:Ahn:Hya:Aha:Ooh:Eep:Ahm:Yah:Nho")%
		CASE "mild", "m"
			LOCALS = %SPLIT_G("Hngh:Auhn:Hnah:Hnnn:Hnng:Aahn:Mmmm:Haaa:Haah:Aaah:Aah:Ahaan:Nnnn:Mmm:Hyah:Ngah:Hahii:Hahee:Ahi:Niyahn:Fwah:Hyan:Angh:Hnya:Yaahh:Nghhooo")%
		CASE "heavy", "h"
			SELECTCASE RAND:13
				CASE 0
					;aunh
					LOCALS = %"A"+"a"*RAND(1,5)+"u"*RAND:3+"n"*RAND:4+"h"*RAND(1,5)%
				CASE 1
					;oohn
					LOCALS = %"O"+"o"*RAND(1,5)+"h"*RAND(1,4)+"n"*RAND:4%
				CASE 2
					;uuongh
					LOCALS = %"U"+"u"*RAND(1,5)+"o"*RAND:3+"n"*RAND:4+"g"*RAND:2+"h"*RAND(1,4)%
				CASE 3
					;hnah/hnya
					LOCALS = %"H"+"n"*RAND:5+SPLIT_G("a"*RAND(3,7)+"h"*RAND:3 + ":" + "y"*RAND(1,4)+"a"*RAND(3,7) )%
				CASE 4
					;nngah
					LOCALS = %"N"+"n"*RAND(2,6)+"g"*RAND:3+"a"*RAND:3+"h"*RAND(1,3)%
				CASE 5
					;(n) + hyah/hiyahn/hahn
					LOCALS = %SPLIT_G("Nh:H") + SPLIT_G("iy:y:") + "a"*RAND(3,7)+"h"*RAND(1,6) + "n"*RAND:4%
				CASE 6
					;mmnh
					LOCALS = %"M"+"m"*RAND(2,6)+"n"*RAND:4+"h"*RAND:3%
				CASE 7
					;aahn
					LOCALS = %"A"+"a"*RAND(2,5)+"h"*RAND:4+"n"*RAND:3%
				CASE 8
					;mmph
					LOCALS = %"M"+"m"*RAND(2,6)+"p"*RAND:3+"h"*RAND(1,5)%
				CASE 9
					;hngh(i/u)
					LOCALS = %"H"+"n"*RAND:5+"g"*RAND(1,3)+"h"*RAND:4 + SPLIT_G("u:i")*RAND(1,6)%
				CASE 10
					;h/ah(ii/ee)
					LOCALS = %SPLIT_G("Ha:A") + "a"*RAND:4+"h"*RAND(1,3) + SPLIT_G("e:i") *RAND(2,4)%
				CASE 11
					;niyahn/eyahn
					LOCALS = %SPLIT_G("Niy:Ey") + "a"*RAND(2,8)+"h"*RAND(1,3) + "n"*RAND(1,4)%
				CASE 12
					;ahyaa/ahyiii
					LOCALS = %SPLIT_G("Ahy") + SPLIT_G("a:i")*RAND(3,7)%
			ENDSELECT
	CASEELSE
		RETURNF "Error at MOAN function! Report this!"
	ENDSELECT
	IF nNameCount || nHeartCount
		strOut += LOCALS + (--ARG:1 > 0 ? RANDLIPS_NAMEHEART_INSERT(nNameCount, nHeartCount, strFlag) + " " # "")
		LOCAL = nInitCount
	ELSE
		IF SPLIT_CHECK(ARGS:1, "dot")
			LOCALS:1 '=  "... "
			LOCAL:1 = 1
		ELSEIF SPLIT_CHECK(ARGS:1, "!")
			LOCALS:1 '=  "!!! "
			LOCAL:1 = 1
		ELSEIF SPLIT_CHECK(ARGS:1, "dot!")
			LOCALS:1 '=  "...! "
			LOCAL:1 = 1
		ELSEIF SPLIT_CHECK(ARGS:1, "rand")
			IF RAND:2
				LOCALS:1 '= SPLIT_G("...:!!!:...!") + " "
				LOCAL:1 = 0 ;reset cap status
				SIF LOCAL:2 ;if non-comma was used, set cap
					LOCAL:1 = 1
				LOCAL:2 = 1 ;note that non-comma mode was used previously
			ELSE
				LOCALS:1 '= ", "
				IF LOCAL:2 ;non-comma used, set cap; otherwise lower case
					LOCAL:1 = 1
				ELSE
					LOCAL:1 = 0
				ENDIF
				LOCAL:2 = 0 ;comma was used
			ENDIF
		ELSE
			LOCALS:1 '= ", "
		ENDIF
		strOut += (nInitCount || LOCAL:1 ? LOCALS # TOLOWER(LOCALS)) + (--ARG:1 > 0 ? LOCALS:1 # "")
		IF nInitCount
			LOCAL = nInitCount
			nInitCount = 0
		ENDIF
	ENDIF
LOOP ARG:1 > 0

SIF (LOCAL || LOCAL:1) && ARG == 1 ;ignore low capitalization rule
	RETURNF UNCAPITALIZE(strOut)
RETURNF CAP_PROCESS(strOut, ARG)

;--------------------------------------------------------
;Generator for groans of pain
;--------------------------------------------------------
@GROAN(ARGS, ARG = 3, ARG:1 = 0)
#FUNCTIONS
#DIMS CONST strNgh = "Ngh:Argh:Gah:Grrh"
#DIMS CONST strGuh = "Guh:Kuh:Gh:Kh:Khaa:Ugh"
#DIMS CONST strAck = "Ack:Agh:Ogh:Oof:Ungh"
#DIMS DYNAMIC strMode
#DIMS DYNAMIC strOut
DO
	strMode '= SPLIT_G(ARGS:0)

	SELECTCASE TOLOWER(strMode)
		CASE "ngh"
			LOCALS '= SPLIT_G(strNgh)
		CASE "guh"
			LOCALS '= SPLIT_G(strGuh)
		CASE "ack"
			LOCALS '= SPLIT_G(strAck)
	CASEELSE
		LOCALS '= SPLIT_G(strNgh + ":" + strGuh + ":" + strAck)
	ENDSELECT
	strOut += TOLOWER(LOCALS) + (--ARG:1 > 0 ? ", " # "")
LOOP ARG:1 > 0

RETURNF CAP_PROCESS(strOut, ARG)

@KISS(ARGS)
#FUNCTIONS
#DIMS CONST strKiss = "Kiss:Smooch:Mwah:Muah:Chuu"
#DIMS CONST strSuck = "Suck:Lick:Slurp:Shlurp:Chlrp:Slrp"

SIF TOLOWER(ARGS) == "kiss"
	RETURNF SPLIT_G(strKiss)
SIF TOLOWER(ARGS) == "suck"
	RETURNF SPLIT_G(strSuck)
	
RETURNF SPLIT_G(strKiss + ":" + strSuck)

@SQUELCH()
#FUNCTIONS
RETURNF SPLIT_G("Squelch:Squish:Shlick:Shlurp:Slosh:Smack:Splurch:Splish:Splash:Swoosh:Slurch:Slshh:Slish")

@RANDLIPS(ARG = -1, ARGS)
#FUNCTIONS
#DIM DYNAMIC nTemp
#DIMS DYNAMIC strTemp, 3

#DIM DYNAMIC nNameCount
#DIM DYNAMIC nHeartCount

#DIMS DYNAMIC strType
#DIMS DYNAMIC strFlag

strType '= SPLIT_SINGLE(TOLOWER(ARGS:0))

SIF SPLIT_CHECK(ARGS, "name")
	nNameCount = RAND(1, 4)
SIF SPLIT_CHECK(ARGS, "heart")
	nHeartCount = RAND(1, 4)
strFlag '= SPLIT_SINGLE(MATCH_SPLIT(ARGS, "charname_"), 1, "_")
SIF SPLIT_CHECK(ARGS, "const")
	strFlag += ":const"
SIF ARG == -1
	ARG = RAND:4
SELECTCASE ARG
	CASE 0
		strTemp += @"%FSYN("lips_gulp")%%RANDLIPS_NAMEHEART_INSERT(nNameCount, nHeartCount, strFlag)% "
		FOR LOCAL, 0, 2
			strTemp += @"%FSYN("lips_muffle")%%RANDLIPS_NAMEHEART_INSERT(nNameCount, nHeartCount, strFlag)% "
		NEXT
		RETURNF strTemp + RANDKISS(strType)
	CASE 1
		FOR LOCAL, 0, 2
			strTemp += @"%RANDKISS(strType)%%RANDLIPS_NAMEHEART_INSERT(nNameCount, nHeartCount, strFlag)% "
			SIF PERCENT(30)
				strTemp += @"%FSYN("lips_muffle")%%RANDLIPS_NAMEHEART_INSERT(nNameCount, nHeartCount, strFlag)% "
		NEXT
		RETURNF strTemp + @"%RANDKISS(strType)%%COND_STR(@"%RANDLIPS_NAMEHEART_INSERT(nNameCount, nHeartCount, strFlag)% %FSYN("lips_muffle")%", PERCENT(30))%"
	CASE 2
		DO
			IF STRLENS(strType)
				strTemp:1 '= TOLOWER(strType) == "suck" ? "Suck" # "Kiss"
			ELSE
				strTemp:1 '= SPLIT_G("Kiss:Suck")
			ENDIF
			strTemp += SPLIT_G(SLUR(strTemp:1, -2) + ":" + strTemp:1 + ":" + SLUR(SLUR(strTemp:1, -2)))
			strTemp:2 '= RANDLIPS_NAMEHEART_INSERT(nNameCount, nHeartCount, strFlag) + " "
			strTemp += strTemp:2
		LOOP INRANGE(nTemp++, 0, 6) && (nTemp >= 3 ? RAND:3 # 1)
		RETURNF REPLACE(strTemp, strTemp:2 + "$", "")
	CASE 3
		strTemp += @"%FSYN("lips_gulp")%%RANDLIPS_NAMEHEART_INSERT(nNameCount, nHeartCount, strFlag)% "
		FOR LOCAL, 0, 2
			strTemp += @"%RANDKISS(strType)%%RANDLIPS_NAMEHEART_INSERT(nNameCount, nHeartCount, strFlag)% "
			SIF PERCENT(30)
				strTemp += @"%FSYN("lips_muffle")%%RANDLIPS_NAMEHEART_INSERT(nNameCount, nHeartCount, strFlag)% "
		NEXT
		RETURNF strTemp + @"%RANDKISS(strType)%%COND_STR(@"%RANDLIPS_NAMEHEART_INSERT(nNameCount, nHeartCount, strFlag)% %FSYN("lips_muffle")%", PERCENT(30))%"
ENDSELECT

;sent flags - first split (charname_): name, second split (const) - output name/hearts continuously
@RANDLIPS_NAMEHEART_INSERT(nNameCount, nHeartCount, strFlag)
#FUNCTIONS
#DIM REF nNameCount
#DIM REF nHeartCount
#DIMS DYNAMIC strFlag
#DIMS strCharName

#DIMS DYNAMIC strOut

strCharName '= CAPITALIZE(SPLIT_SINGLE(strFlag))
SIF !STRLENS(strCharName)
	strCharName '= CALLNAME:MASTER

;show always as long as there's name/heart counts or skip at random or when there's nothing
SIF !(SPLIT_CHECK(strFlag, "const") && (nNameCount + nHeartCount)) && (!PERCENT(30) || (nNameCount + nHeartCount) == 0)
	strOut '= "..."
IF RAND:2 && nNameCount > 0
	nNameCount --
	;do not append punctuation if it's already included in the incoming string
	LOCALS = !
	SIF STRING_ENDS_IN(strCharName, "\\!", "\\?")
		LOCALS =
	strOut '= "... " + strCharName + LOCALS
ELSEIF nHeartCount > 0
	nHeartCount --
	IF SPLIT_CHECK(strFlag, "HPH")
		strOut '= RAND: 2 ? "...HPH" # "HPH..."
	ELSE
		strOut '= RAND: 2 ? "...♥" # "♥..."
	ENDIF
ENDIF
;failsafe
SIF !STRLENS(strOut)
	strOut '= "..."
RETURNF strOut

@RANDKISS(ARGS)
#FUNCTIONS
SELECTCASE RAND:3
	CASE 0
		RETURNF KISS(ARGS)
	CASE 1
		RETURNF SLUR(KISS(ARGS))
	CASE 2
		RETURNF SLUR(KISS(ARGS), -2)
ENDSELECT

@PLEASURE(ARG = -1, ARGS, ARGS:1)
#FUNCTIONS
#DIM nRange, 2
#DIM nOutput
#DIMS strType, 5
#DIMS strAdd

strAdd '= SPLIT_G("desire:pleasure:ecstasy:bliss")
SIF STRLENS(SPLIT_SINGLE(TOLOWER(ARGS:0), 1))
	strAdd '= SPLIT_G(SPLIT_SINGLE(TOLOWER(ARGS:0), 1), "/")

SIF ARG == -1
	ARG = TARGET

SELECTCASE SPLIT_SINGLE(TOLOWER(ARGS:0))
	CASE "nofirst"
		nRange:0 = 1
		nRange:1 = VARSIZE("strType")
	CASE "nolose"
		nRange:0 = 0
		nRange:1 = 3
	CASE "lose"
		nRange:0 = 3
		nRange:1 = VARSIZE("strType")
	CASE "indulge"
		nRange:0 = 1
		nRange:1 = 3
CASEELSE
	nRange:0 = 0
	nRange:1 = VARSIZE("strType")
ENDSELECT

strType:0 = follow %HIS_HER(ARG)% instincts
strType:1 = %SPLIT_G("pursue:enjoy:ride:seek out")%
strType:2 = %SPLIT_G("indulge:drown:revel:wallow:bask:sink:melt:soak")% in
strType:3 = %SPLIT_G("surrender:abandon:give:entrust")% %HIMSELF_HERSELF(ARG)% to
strType:4 = %SPLIT_G("submit:yield:lose")% to

nOutput = RAND(nRange, nRange:1)

RETURNF CONJUGATOR(strType:(nOutput) + ( nOutput > 0 ? " the " + strAdd # "") + ":" + ARGS:1, 1)

@AFTERGLOW(ARG = -1, ARGS, ARGS:1)
#FUNCTIONS
#DIM nOutput
#DIMS strType, 3
#DIMS strAdd

strAdd '= SPLIT_G("orgasm:climax:ecstasy:pleasure:post orgasm")
SIF STRLENS(SPLIT_SINGLE(TOLOWER(ARGS:0), 1))
	strAdd '= SPLIT_G(SPLIT_SINGLE(TOLOWER(ARGS:0), 1), "/")

SIF ARG == -1
	ARG = TARGET

strType:0 = %SPLIT_G("relax:immerse:bathe:bask")% in the afterglow
strType:1 = %SPLIT_G("savor:relish")% the aftertaste
strType:2 = enjoy the sensation

nOutput = RAND(0, VARSIZE("strType"))

RETURNF CONJUGATOR(strType:(nOutput) + ( TOLOWER(strAdd) == "pleasure" ? " of the " # @" of %HIS_HER(ARG)% ") + strAdd + ":" + ARGS:1)

;--------------------------------------------------------
;sex verb generation (f:verb form) follows FV rules
;--------------------------------------------------------
@FVERB(ARGS:0)
#FUNCTIONS

LOCALS:0 =

IF SPLIT_CHECK(ARGS:0, "f")
	IF SPLIT_CHECK(ARGS:0, "ing")
		LOCALS:0 = bouncing on:grinding on:going down on:riding:gyrating atop
	ELSEIF SPLIT_CHECK(ARGS:0, "s")
		LOCALS:0 = bounces on:grinds on:goes down on:rides:gyrates atop
	ELSEIF SPLIT_CHECK(ARGS:0, "ed")
		LOCALS:0 = bounced on:grinded on:ridden:gyrated atop
	ELSE
		LOCALS:0 = bounce on:grind on:go down on:ride:gyrate atop
	ENDIF
ELSEIF SPLIT_CHECK(ARGS:0, "n")
	LOCALS:0 = fucking:thrusting:pounding:penetrating:ravaging:pumping:pistoning:churning:plunging:pummeling:hammering:dicking
ELSE
	IF SPLIT_CHECK(ARGS:0, "ing")
		LOCALS:0 = fucking:thrusting into:pounding at:penetrating:ravaging:pumping into:grinding into:churning:plunging into:pummeling:hammering into:railing
	ELSEIF SPLIT_CHECK(ARGS:0, "s")
		LOCALS:0 = fucks:thrusts into:pounds at:penetrates:ravages:pumps into:grinds into:churns:plunges into:pummels:hammers into
	ELSEIF SPLIT_CHECK(ARGS:0, "ed")
		LOCALS:0 = fucked:pounded:penetrated:ravaged:pumped:churned:pummeled:hammered
	ELSE
		LOCALS:0 = fuck:thrust into:pound at:penetrate:ravage:pump into:grind into:churn:plunge into:pummel:hammer into
	ENDIF
ENDIF

RETURNF SPLIT_G(LOCALS:0)

@COPULATE(ARGS:0, ARG)
#FUNCTIONS
;ARG for capitalization
IF SPLIT_CHECK(ARGS:0, "ing")
	LOCALS:0 = copulating:having sex:having intercourse:making love:mating:breeding:fucking
ELSEIF SPLIT_CHECK(ARGS:0, "s")
	LOCALS:0 = copulates:has sex:has intercourse:mates:breeds:fucks
ELSEIF SPLIT_CHECK(ARGS:0, "to")
	LOCALS:0 = copulate:have sex:have an intercourse:mate:breed:fuck
ELSEIF SPLIT_CHECK(ARGS:0, "ed")
	LOCALS:0 = copulated:had sex:had an intercourse:made love:mated:bred:fucked
ELSE
	LOCALS:0 = copulation:sex:intercourse:lovemaking:mating:breeding:intimacy:fucking
ENDIF

IF ARG
	RETURNF CAPITALIZE(SPLIT_G(LOCALS:0))
ELSE
	RETURNF SPLIT_G(LOCALS:0)
ENDIF

;--------------------------------------------------------
;this is for other synonyms that can be randomized (word:verb form)
;ARG:0 is optional plurality count
;--------------------------------------------------------
@FSYN(ARGS:0, ARG:0, nCharaNum = -1, nThirdPerson = 1)
#FUNCTIONS
#DIM nCharaNum
#DIM nThirdPerson ;set to -1 to control it through THIRDPERSON

LOCALS:0 =

ARGS:0 '= SPLIT_G(ARGS:0, "/")
SELECTCASE SPLIT_SINGLE(TOLOWER(ARGS:0))
CASE "melt"
	LOCALS:0 = melt:twist:contort:distort:wrench:warp
	SIF SPLIT_CHECK(ARGS:0, "ed")
		LOCALS:0 = %LOCALS:0%:intoxicate:enthrall:bewitch
CASE "reflex"
	IF SPLIT_CHECK(ARGS:0, "ly")
		LOCALS:0 = unconsciously:on reflex:on impulse:unintentionally:involuntarily
	ELSE
		LOCALS:0 = reflex:impulse:habit:instinct
	ENDIF
CASE "rub"
	LOCALS:0 = rub:stroke:caress:fondle
CASE "stroke"
	LOCALS:0 = stroke:brush:rub
CASE "hj"
	LOCALS:0 = rub:stroke:fondle:stimulate:jerk off:service:masturbate
CASE "smile"
	LOCALS:0 = smile:grin:smirk
CASE "stare"
	LOCALS:0 = stare:look:gaze
CASE "shame"
	IF SPLIT_CHECK(ARGS:0, "d")
		LOCALS:0 = embarrassed:ashamed:disgraced:humiliated
	ELSEIF SPLIT_CHECK(ARGS:0, "es")
		LOCALS:0 = embarrasses:disgraces:humiliates
	ELSEIF SPLIT_CHECK(ARGS:0, "ly")
		LOCALS:0 = embarrassingly:shamefully:disgracefully:humiliatingly
	ELSEIF SPLIT_CHECK(ARGS:0, "n")
		LOCALS:0 = embarrassment:shame:disgrace:humiliation
	ELSE
		LOCALS:0 = embarrassing:shameful:disgraceful
	ENDIF
CASE "gentle"
	IF SPLIT_CHECK(ARGS:0, "ly")
		LOCALS:0 = gently:tenderly:kindly:affectionately
	ELSE
		LOCALS:0 = gentle:tender:kind:affectionate
	ENDIF
CASE "lick"
	LOCALS:0 = %TOLOWER(KISS())%
CASE "pant"
	LOCALS:0 = pant:puff:gasp
	SIF SPLIT_CHECK(ARGS:0, "ing", "s", "ed")
		LOCALS:0 = %LOCALS:0%:breathe %SPLIT_G("roughly:heavily")%
CASE "insane"
	LOCALS:0 = insane:crazy:mad:nuts
CASE "lewd"
    LOCALS:0 = lewd:erotic:obscene:indecent:vulgar:lascivious
	SIF SPLIT_CHECK(ARGS:0, "ly")
		LOCALS:0 = lewdly:erotically:obscenely:indecently:vulgarly:lasciviously
CASE "good"
	LOCALS:0 = nice:good:awesome:great
CASE "cute"
    LOCALS:0 = cute:lovely:adorable:sweet
CASE "tasty"
    LOCALS:0 = tasty:delicious:yummy
CASE "hot"
    LOCALS:0 = hot:warm
CASE "intense"
	IF SPLIT_CHECK(ARGS:0, "ly")
		LOCALS:0 = intensely:strongly:fiercely:violently:vehemently:vigorously:forcibly:furiously:heavily:frantically:relentlessly:feverishly:mercilessly:wildly
	ELSEIF SPLIT_CHECK(ARGS:0, "ness")
		LOCALS:0 = intenseness:fierceness:violence:furiousness:force:strength
	ELSE
		LOCALS:0 = intense:strong:fierce:violent:vehement:furious:relentless
	ENDIF
CASE "contract"
	LOCALS:0 = contract:clench:tighten:squeeze
CASE "sandwich"
	LOCALS:0 = squeeze:hold:sandwich:squish:tuck:crush
CASE "stir"
	LOCALS:0 = stir:ransack:ravage:ravish:violate:fill:churn
CASE "shoot" ;dumps their load
	LOCALS:0 = pump:dump:pour:blow:ejaculate:spurt:shoot:let out
CASE "ejac"
	IF SPLIT_CHECK(ARGS:0, "p")
		LOCALS:0 = pour:ejaculate:release
	ELSEIF SPLIT_CHECK(ARGS:0, "v")
		LOCALS:0 = ejaculate:cum
	ELSE
		LOCALS:0 = pour:blow:ejaculate:spurt:shoot:release
	ENDIF
CASE "letout" ;letting out so much...
	IF SPLIT_CHECK(ARGS:0, "it")
		LOCALS:0 = pouring it:ejaculating it:spurting it:splurting it:shooting it:letting it out
	ELSEIF SPLIT_CHECK(ARGS:0, "s-it")
		LOCALS:0 = pours it:ejaculates it:spurts it:splurts it:shoots it:lets it out
	ELSE
		LOCALS:0 = pour:ejaculate:spurt:splurt:shoot:let out:cum
	ENDIF
CASE "pour" ;pouring into
	LOCALS:0 = pour:pump:spurt:splurt:shoot
CASE "spurt"
	LOCALS:0 = spurt:splurt:shoot:spray
CASE "fill" ;with semen
	LOCALS:0 = fill:cram:stuff:pack:flood
CASE "squirm"
	LOCALS:0 = squirm:writhe:wriggle:squiggle:twist
CASE "clamp" ;clamping down on
	LOCALS:0 = clamp:tighten:press:grip:clench
CASE "squeeze" ;squeezes around/on
	LOCALS:0 = squeeze:tighten:clench:clasp
CASE "twine"
	LOCALS:0 = twine:coil:twist:wiggle:undulate
CASE "milk"
	LOCALS:0 = milk:squeeze:wring
CASE "moan"
	LOCALS:0 = moan:groan:squeal:whine
CASE "drench"
	LOCALS:0 = drench:soak
CASE "wet"
	LOCALS:0 = wet:soppy:soaked:dripping:drenched
CASE "tired"
	LOCALS:0 = exhausted:tired:weakened:beat:drained:spent:worn out:fatigued:powerless
CASE "leak"
	LOCALS:0 = leak:ooze:flow:run:trickle:spill:drip:dribble
CASE "overflow"
	LOCALS:0 = overflow:ooze:spill
CASE "stream"
	LOCALS:0 = stream:jet:flow
CASE "extra"
	LOCALS:0 = extraordinary:extreme:exceptional:extra
CASE "pee"
	IF SPLIT_CHECK(ARGS:0, "n")
		LOCALS:0 = pee:urine:piss
	ELSE
		LOCALS:0 = pee:urinate:piss
	ENDIF
CASE "squirt"
	LOCALS:0 = squirt:gush:splash
CASE "hug"
	LOCALS:0 = hug:grasp onto:embrace:squeeze:cling to
CASE "tremble" ;body
	LOCALS:0 = tremble:squirm:shudder:shiver:quiver
CASE "twitch" ;body
	LOCALS:0 = twitch:shake:convulse:waver:jerk:writhe
CASE "throb" ;throbbing dick
	LOCALS:0 = throb:pulsate:tremble:twitch:swell
CASE "base"
	LOCALS:0 = all the way down:to the base:up to the hilt
CASE "orgasm"
	LOCALS:0 = orgasm:climax
	SIF SPLIT_CHECK(ARGS:0, "ing", "s", "ed", "to")
		LOCALS:0 = %LOCALS:0%:cum
CASE "grind" ; + her hips
	LOCALS:0 = grind:pump:gyrate:bang:move:shake:swing:sway:rock
CASE "bounce" ; + big boobs
	LOCALS:0 = sway:jump:shake:rock:bounce
CASE "thrust" ; + his dick
	LOCALS:0 = thrust:slam:plunge:shove:ram
CASE "thrust2"
	LOCALS:0 = grind:pump:pound:hammer
CASE "wrap"
	LOCALS:0 = wrap:hook:clasp
CASE "ask"
	LOCALS:0 = ask:tell:order:direct:urge
CASE "hold"
	LOCALS:0 = hold:grasp:grab
CASE "grope"
	LOCALS:0 = grab:grip:grope:fondle:squeeze
CASE "remove"
	IF SPLIT_CHECK(ARGS:0, "out")
		LOCALS:0 = sliding out:slipping out:pulling out:removing
	ELSE
		LOCALS:0 = slide:slip:pull:remove
	ENDIF
CASE "insert"
	IF SPLIT_CHECK(ARGS:0, "f")
		LOCALS:0 = push:guide:slide:take:insert:slip
	ELSE
		LOCALS:0 = jam:thrust:push:slide:insert:ram:stick:bury:sink:put
	ENDIF
CASE "pushdown"
	LOCALS:0 = push:toss:roll:shove
CASE "pindown"
	LOCALS:0 = pin:push:toss:throw:hold:shove
CASE "restrain"
	LOCALS:0 = pin:hold:press
CASE "rotate"
	IF SPLIT_CHECK(ARGS:0, "y")
		LOCALS:0 = flip:turn:spin:swing
	ELSEIF SPLIT_CHECK(ARGS:0, "z")
		LOCALS:0 = flip:turn:roll
	ENDIF
CASE "slap"
	LOCALS:0 = slap:smack
CASE "start"
	LOCALS:0 = start:begin
CASE "keep"
	LOCALS:0 = keep:continue
CASE "gravid"
	LOCALS:0 = gravid:rounded:swollen
CASE "hole"
	LOCALS:0 = hole:opening:orifice
CASE "penis"
	LOCALS:0 = penis:cock:dick:member:shaft:erection
CASE "strapon"
	LOCALS:0 = strapon:dildo:%SPLIT_G("artificial:toy")% %FSYN("penis")%
CASE "onahole"
	LOCALS:0 = onahole:sex sleeve:%SPLIT_G("artificial:toy:rubber")% %FSYN("vagina")%:masturbator
CASE "balls"
	LOCALS:0 = balls:scrotum:testicles:nutsack
CASE "vagina"
	IF nCharaNum >= 0
		IF ABL:nCharaNum:질 < 5 && !TALENT:nCharaNum:음호
			IF ((TALENT:nCharaNum:연령 == -1 || TALENT:nCharaNum:유치) && (TALENT:nCharaNum:체형 == -2 || TALENT:nCharaNum:체형 == -1))
				LOCALS:0 = pussy:pussy:pussy:cunny:coochie
			ELSE
				LOCALS:0 = vagina:pussy:cunt
			ENDIF
		ELSE
			LOCALS:0 = vagina:pussy:cunt:fuckhole:orifice:snatch:twat:honeypot
		ENDIF
	ELSE
		LOCALS:0 = vagina:pussy:cunt
	ENDIF
CASE "crotch"
	IF SPLIT_CHECK(ARGS:0, "es")
		LOCALS:0 = crotches:groins:genitals:privates
	ELSE
		LOCALS:0 = crotch:groin:genitals:privates
	ENDIF
CASE "ass"
	LOCALS:0 = ass:butt
	SIF SPLIT_CHECK(ARGS:0, "full")
		LOCALS:0 = %LOCALS%:backside:bottom
CASE "anus"
	LOCALS:0 = asshole:butthole:anus
	SIF !SPLIT_CHECK(ARGS:0, "nob")
		LOCALS:0 = %LOCALS%:butt:ass
CASE "anal"
	LOCALS:0 = rectum:bowels:anus
CASE "urethra"
	LOCALS:0 = urethra:pee hole
CASE "chest"
	IF SPLIT_CHECK(ARGS:0, "big") || ( nCharaNum >= 0 && GET_BUSTSIZE(nCharaNum) > 0 )
		LOCALS:0 = breasts:tits:boobs:boobies:jugs:love-pillows:knockers%COND_STR(@":rack:chest", !SPLIT_CHECK(ARGS:0, "non"))%
	ELSEIF SPLIT_CHECK(ARGS:0, "plu")
		LOCALS:0 = breasts:chests:tits:boobs:boobies:titties
	ELSEIF SPLIT_CHECK(ARGS:0, "norm_plu")
		LOCALS:0 = breasts:chests:tits:boobs
	ELSEIF SPLIT_CHECK(ARGS:0, "norm")
		LOCALS:0 = breasts:tits:boobs
		SIF !SPLIT_CHECK(ARGS:0, "non")
			LOCALS:0 += ":chest"
	ELSE
		LOCALS:0 = breasts:tits:boobs:boobies:titties
		SIF !SPLIT_CHECK(ARGS:0, "non")
			LOCALS:0 += ":chest"
	ENDIF
	SIF ( nCharaNum >= 0 && IS_MALE(nCharaNum) )
		LOCALS:0 = man-%SPLIT_G(LOCALS:0)%
CASE "chest_describe"
	LOCALS = 
	SELECTCASE GET_BUSTSIZE(nCharaNum)
		CASE IS >= 2
			IF IS_CHILD(nCharaNum)
				LOCALS = %SPLIT_G("massive :huge :bulging :swollen :overfilled :cumbersome :overdeveloped :very mature :voluptuous ")%
			ELSE
				LOCALS = %SPLIT_G("massive :huge :bulging :swollen :overfilled :cumbersome :motherly :voluptuous ")%
			ENDIF
		CASE 1
			IF IS_CHILD(nCharaNum)
				LOCALS = %SPLIT_G("large :big :soft :copious :plump :pillowy :stacked :heavy :impressive :substantial :overdeveloped :adult :disproportionate :ripe ")%
			ELSE
				LOCALS = %SPLIT_G("large :big :soft :copious :plump :pillowy :stacked :heavy :impressive :substantial :ripe :squeezable ")%
			ENDIF
		CASE 0
			IF IS_CHILD(nCharaNum)
				LOCALS = %SPLIT_G("rounded :soft :shapely :developed :well-shaped :nice ")%
			ELSE
				LOCALS = %SPLIT_G("rounded :soft :shapely :average :well-shaped :nice ")%
			ENDIF
		CASE -1
			IF IS_CHILD(nCharaNum)
				LOCALS = %SPLIT_G("cute :small :puffy :childish :developing :budding :perky :thin ")%
			ELSE
				LOCALS = %SPLIT_G("cute :small :puffy :modest :undersized :perky :thin ")%
			ENDIF
		CASE IS <= -2
			IF IS_CHILD(nCharaNum)
				LOCALS = %SPLIT_G("tiny :washboard :flat :childish :undeveloped :smooth :almost non-existent :nearly zero-sized ")%
			ELSE
				LOCALS = %SPLIT_G("tiny :washboard :flat :modest :paper-thin :insignificant :smooth :almost non-existent :nearly zero-sized ")%
			ENDIF
	ENDSELECT
	IF GET_BUSTSIZE(nCharaNum) > 0
		LOCALS += FSYN("chest:big:non")
	ELSEIF GET_BUSTSIZE(nCharaNum) == 0
		LOCALS += FSYN("chest:norm")
	ELSE
		LOCALS += FSYN("chest:non")
	ENDIF
CASE "voluptuous"
	SIF SPLIT_CHECK(ARGS:0, "rand")
		ARGS += @":%SPLIT_G("giant:huge:big")%"
	IF SPLIT_CHECK(ARGS:0, "giant")
		LOCALS:0 = giant:humongous:colossal:tremendous:spacious:gigantic
	ELSEIF SPLIT_CHECK(ARGS:0, "huge")
		LOCALS:0 = massive:huge:bulging:swollen:overfilled:cumbersome:motherly
	ELSE
		LOCALS:0 = large:big:soft:plump:heavy:impressive:voluptuous:shapely:well-shaped
	ENDIF
CASE "labia"
	LOCALS:0 = labia:%SPLIT_G("pussy:vaginal")% %SPLIT_G("lips:folds:petals")%
CASE "slit"
	LOCALS:0 = entrance:crack:slit:hole:opening:cleft:vulva
CASE "belly"
	LOCALS:0 = belly:tummy:stomach
CASE "juice"
	LOCALS:0 = \@ RAND:4 ? %SPLIT_G("pussy:vaginal:love:lewd:sticky:hot")%%SPLIT_G(" juice: nectar: honey: fluid: lube")% # girlcum \@
CASE "swallow"
	LOCALS:0 = swallow:guzzle:gulp:drink
CASE "blowjob"
	LOCALS:0 = blowjob:fellatio
	SIF SPLIT_CHECK(ARGS:0, "give")
		LOCALS:0 += ":head"
CASE "titjob"
	LOCALS:0 = titjob:boobjob:paizuri
CASE "answer"
	LOCALS:0 = say:tell:answer:reply
CASE "request"
	LOCALS:0 = request:demand:desire:order:directions
CASE "lips_gulp"
	LOCALS:0 = Ahm:Aam:Oom:Ohm:Omph
CASE "lips_muffle"
	LOCALS:0 = Mmm:Nnn:Mph:Mff:Mmph:Fwaah:Nfu:Nmph:Nmh:Mmnn:Mgh
CASE "lips_over"
	LOCALS:0 = Puah:Fuah:Haahh:Pfaa
CASE "hii"
	LOCALS:0 = Hii:Eek:Eep:Yah:Hyah
CASE "geez"
	LOCALS:0 = geez:jeez:sheesh:good grief
CASE "ow"
	LOCALS:0 = oww:ow:ouch:yee-youch:yow yow
CASEELSE
	SETCOLOR C_RED
	PRINTL
	PRINTFORML %"-"*89%
	PRINTFORML @FSYN TAKES NO SUCH STRING AS "%ARGS:0%"
	PRINTFORML !REPORT THIS!
	PRINTFORML %"-"*89%
	RESETCOLOR
	RETURNF
ENDSELECT

LOCALS:0 = %SPLIT_G(LOCALS:0)%

IF SPLIT_CHECK(ARGS:0, "ing")
	LOCALS:0 '= VERBT_CONTINUOUS(LOCALS:0, nThirdPerson)
ELSEIF SPLIT_CHECK(ARGS:0, "s") && ARG:0 <= 1
	LOCALS:0 '= VERBT_SIMPLE(LOCALS:0, nThirdPerson)
ELSEIF SPLIT_CHECK(ARGS:0, "ed") && ARG:0 <= 1
	LOCALS:0 '= VERBT_PAST(LOCALS:0)
;pluralize
ELSEIF ARG:0 > 1
	LOCALS:0 '= PLNOUN(LOCALS:0, 2)
ENDIF

RETURNF LOCALS:0