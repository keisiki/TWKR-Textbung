;-----------------------------------------------------------
;거점맵 존재판정
;현재는 0~10까지 모두 갖추어졌으므로 큰 의미는 없다
;-----------------------------------------------------------
@GET_EXISTMAP(ARG)
#FUNCTION
SIF GROUPMATCH(ARG, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ,10)
	RETURNF 1
;특정 경우에만 감옥맵 처리를 하고 싶다면 아래에 조건 추가
SIF ARG == 12
	RETURNF 1
SIF ITEM:주택==1&&ARG==13
	RETURNF 1
SIF ITEM:주택>=2&&ARG==14
	RETURNF 1
;ARG 13 = 주택, 14 = 저택 KR판 고유기능

;-----------------------------------------------------------
;대상 맵의 호칭 문자열을 반환
;ARG     MAPID
;-----------------------------------------------------------
@GET_MAPNAME(ARG)
#FUNCTIONS
#DIMS PNAME
SELECTCASE ARG
	CASE 0
		PNAME = 하쿠레이 신사
	CASE 1
		PNAME = 명련사
	CASE 2
		PNAME = 인간마을
	CASE 3
		PNAME = 안개의호수~홍마관
	CASE 4
		PNAME = 미혹의 죽림
	CASE 5
		PNAME = 마법의 숲
	CASE 6
		PNAME = 삼도천~명계
	CASE 7
		PNAME = 요괴의 산(산록)
	CASE 8
		PNAME = 요괴의 산(산정)
	CASE 9
		PNAME = 지저
	CASE 10
		PNAME = 꿈의 세계~달
	CASE 12
		PNAME = 감옥
	CASE 13
		PNAME = 주택
	CASE 14
		PNAME = 저택
	CASEELSE
		PNAME = 수수께끼의 영역
ENDSELECT
RETURNF PNAME


;------------------------------------------
;거점 내 장소 ARG로 CHARA가 이동할 수 있는지를 반환하는 함수
;鍵や危険地帯・幻影地帯など
;ARG    장소ID
;CHARA  캐릭터ID, 생략 하면 0=MASTER, 현상 캐릭터 이동 이외에서는 사용하지 않습니다
;------------------------------------------
@MAP_CAN_MOVE(ARG, CHARA)
#FUNCTION
#DIM CHARA
#DIM 집주인
#DIM 재택
IF ROOMDATA:(ARG % 100) & 장소_원룸
	집주인 = PRIVATEROOM:(ARG % 100)
	재택 = 0
	;당신
	IF CHARA == MASTER
		;자택이라면 가능
		IF ARG == Default초기위치
			RETURNF 1
		;동행이나 연모라면 넣는다(집주인 수면중도 가능
		ELSEIF CFLAG:집주인:감금됨
			재택 = 1
		ELSEIF CFLAG:집주인:동행 || TALENT:집주인:연모
			재택 = 1
		;집주인이 있어 일어나고 있다
		ELSEIF CFLAG:집주인:현재위치 == ARG
			IF SHIRAHU(집주인)
				재택 = 1
			ELSEIF ITEM:69 || GROUPMATCH(MAIN_MAP, 13,14)
				재택 = 1
			ENDIF
		;집주인 이외의누군가가 있는, 이 사람 물건은 자기도 해도 좋다
		ELSEIF IN_ROOM_NUMBER(ARG)
			재택 = 1
		;KR판 오리지날용 분기
		ELSEIF ITEM:69 || GROUPMATCH(MAIN_MAP, 13,14)
			RETURNF 1
		ENDIF
	;집주인은 넣는다
	ELSEIF CHARA == 집주인
		재택 = 1
	;그렇지 않은 캐릭터는 궁합이 100을 넘지 않았다고 안 돼
	ELSEIF RELATION:집주인:(CHARA) > 100
		재택 = 1
	ENDIF
	IF !재택
		TFLAG:이동불능메시지 = 999
		RETURNF 0
	ENDIF
ENDIF

;미등록지점
IF STR:(8000 + ARG) == "" && 저택이야(ARG) == 0
	DEBUGPRINTFORML STR:(8000 + ARG) = NULL
	TFLAG:이동불능메시지 = 998
	RETURNF 0
ENDIF
;;잠금 처리 ;KR판 구잔재 또는 오리지날
IF FLAG:자실잠금 && ARG == CFLAG:MASTER:초기위치 && CHARA != MASTER && ARG != CFLAG:CHARA:초기위치
	SIF CFLAG:MASTER:현재위치 == ARG
		TFLAG:이동불능메시지 = -1 * CHARA
ENDIF
;현행 일판 버전
; ;自室施錠
; SIF FLAG:自室施錠 && ARG == CFLAG:MASTER:初期位置 && CHARA != MASTER && ARG != CFLAG:CHARA:初期位置
; 	RETURNF 0

SELECTCASE MAIN_MAP
	CASE 0
		RETURNF MAP_CAN_MOVE_0(ARG, CHARA)
	CASE 1
		RETURNF MAP_CAN_MOVE_1(ARG, CHARA)
	CASE 2
		RETURNF MAP_CAN_MOVE_2(ARG, CHARA)
	CASE 3
		RETURNF MAP_CAN_MOVE_3(ARG, CHARA)
	CASE 4
		RETURNF MAP_CAN_MOVE_4(ARG, CHARA)
	CASE 5
		RETURNF MAP_CAN_MOVE_5(ARG, CHARA)
	CASE 6
		RETURNF MAP_CAN_MOVE_6(ARG, CHARA)
	CASE 7
		RETURNF MAP_CAN_MOVE_7(ARG, CHARA)
	CASE 8
		RETURNF MAP_CAN_MOVE_8(ARG, CHARA)
	CASE 9
		RETURNF MAP_CAN_MOVE_9(ARG, CHARA)
	CASE 10
		RETURNF MAP_CAN_MOVE_10(ARG, CHARA)
	CASE 12
		RETURNF MAP_CAN_MOVE_12(ARG, CHARA)
	CASE 13
		RETURNF MAP_CAN_MOVE_13(ARG, CHARA)
	CASE 14
		RETURNF MAP_CAN_MOVE_14(ARG, CHARA)
ENDSELECT
RETURNF 1

;-----------------------------------------------------------
;지점의 연결 설정
;ARG    기준 지점
;ARG:1  대상 지점
;RETURNF 0=이동할 수 없다, 보이지 않는다
;        1=이동할 수 있다, 보이지 않는다
;        2=이동할 수 없다, 보인다
;        3=이동할 수 있다, 보인다(직통)
;-----------------------------------------------------------
@CAN_MOVE(ARG, ARG:1)
#FUNCTION

IF MAIN_MAP == GET_MAPID(ARG)
SELECTCASE MAIN_MAP
	CASE 0
		RETURNF CAN_MOVE_0(ARG, ARG:1)
	CASE 1
		RETURNF CAN_MOVE_1(ARG, ARG:1)
	CASE 2
		RETURNF CAN_MOVE_2(ARG, ARG:1)
	CASE 3
		RETURNF CAN_MOVE_3(ARG, ARG:1)
	CASE 4
		RETURNF CAN_MOVE_4(ARG, ARG:1)
	CASE 5
		RETURNF CAN_MOVE_5(ARG, ARG:1)
	CASE 6
		RETURNF CAN_MOVE_6(ARG, ARG:1)
	CASE 7
		RETURNF CAN_MOVE_7(ARG, ARG:1)
	CASE 8
		RETURNF CAN_MOVE_8(ARG, ARG:1)
	CASE 9
		RETURNF CAN_MOVE_9(ARG, ARG:1)
	CASE 10
		RETURNF CAN_MOVE_10(ARG, ARG:1)
	CASE 12
		RETURNF CAN_MOVE_12(ARG, ARG:1)
	CASE 13
		RETURNF CAN_MOVE_13(ARG, ARG:1)
	CASE 14
		RETURNF CAN_MOVE_14(ARG, ARG:1)
	CASE 15
		RETURNF CAN_MOVE_15(ARG, ARG:1)
ENDSELECT
ENDIF
RETURNF 0
;-----------------------------------------------------------
;장소ID의 이름 문자열을 반환하는 함수
;ARG  장소ID
;-----------------------------------------------------------
@NAME_FROM_PLACE(ARG)
#FUNCTIONS
#DIM MAPID
#DIMS PNAME
PNAME = 
MAPID = GET_MAPID(ARG)
IF TFLAG:망상중 == 1
	PNAME = 근사한 공간
ELSEIF ARG == OMANEKIBEYA()
	;초대방의 이름 처리
	RETURNF OMANEKI_PLACE()
ELSEIF ARG == ROAD_TO(MAPID)
	PNAME = %GET_MAPNAME(MAPID)%%조사만처리(GET_MAPNAME(MAPID), "으로")% 가는 중
ELSEIF MAPID == MAIN_MAP
	;物件マップ内の名前処理
	SELECTCASE MAPID
		CASE 0
			PNAME = %MAP_PLACENAME_0(ARG)%
		CASE 1
			PNAME = %MAP_PLACENAME_1(ARG)%
		CASE 2
			PNAME = %MAP_PLACENAME_2(ARG)%
		CASE 3
			PNAME = %MAP_PLACENAME_3(ARG)%
		CASE 4
			PNAME = %MAP_PLACENAME_4(ARG)%
		CASE 5
			PNAME = %MAP_PLACENAME_5(ARG)%
		CASE 6
			PNAME = %MAP_PLACENAME_6(ARG)%
		CASE 7
			PNAME = %MAP_PLACENAME_7(ARG)%
		CASE 8
			PNAME = %MAP_PLACENAME_8(ARG)%
		CASE 9
			PNAME = %MAP_PLACENAME_9(ARG)%
		CASE 10
			PNAME = %MAP_PLACENAME_10(ARG)%
		CASE 12
			PNAME = %MAP_PLACENAME_12(ARG)%
		CASE 13
			PNAME = %MAP_PLACENAME_13(ARG)%
		CASE 14
			PNAME = %MAP_PLACENAME_14(ARG)%
		CASE 15
			PNAME = %MAP_PLACENAME_15(ARG)%
		;CASE 10
		;	PNAME = %MAP_PLACENAME_10(ARG)%
	ENDSELECT
ELSEIF ARG < 2000
	;외출 맵 쪽
	PNAME = %STR:(6000 + ARG / 10)%
ELSE
	;도중외, 그외범위
	PNAME = %STR:(ARG)%
ENDIF
RETURNF PNAME


;-----------------------------------------------------------
;거점의 장소 ID를 외출맵상의 장소 ID로 치환하는 함수
;ARG      대상장소ID（거점맵）
;RETURNF  교체장소ID（외출맵）
;-----------------------------------------------------------
@GET_MAP_REPLACEMENT(ARG)
#FUNCTION
#DIM 대상맵
#DIM OUTID
OUTID = 0
대상맵 =  GET_MAPID(ARG)
SIF MAIN_MAP == 대상맵
	RETURNF ARG

SELECTCASE 대상맵
	CASE 0
		OUTID = MAP_SEARCH_REPLACEMENT_0(ARG)
	CASE 1
		OUTID = MAP_SEARCH_REPLACEMENT_1(ARG)
	CASE 2
		OUTID = MAP_SEARCH_REPLACEMENT_2(ARG)
	CASE 3
		OUTID = MAP_SEARCH_REPLACEMENT_3(ARG)
	CASE 4
		OUTID = MAP_SEARCH_REPLACEMENT_4(ARG)
	CASE 5
		OUTID = MAP_SEARCH_REPLACEMENT_5(ARG)
	CASE 6
		OUTID = MAP_SEARCH_REPLACEMENT_6(ARG)
	CASE 7
		OUTID = MAP_SEARCH_REPLACEMENT_7(ARG)
	CASE 8
		OUTID = MAP_SEARCH_REPLACEMENT_8(ARG)
	CASE 9
		OUTID = MAP_SEARCH_REPLACEMENT_9(ARG)
	CASE 10
		OUTID = MAP_SEARCH_REPLACEMENT_10(ARG)
	CASE 12
		OUTID = MAP_SEARCH_REPLACEMENT_12(ARG)
	CASE 13
		OUTID = MAP_SEARCH_REPLACEMENT_13(ARG)
	CASE 14
		OUTID = MAP_SEARCH_REPLACEMENT_14(ARG)
	CASEELSE
		OUTID = ARG
ENDSELECT

SIF OUTID > 0
	RETURNF OUTID

;-----------------------------------------------------------
;お出かけ先のマップ設定を返す関数
;ARG   対象の地点
;ARGS  判定文字引数
;-----------------------------------------------------------
@ODEKAKEMAP_SETTING(ARG, ARGS)
#FUNCTION
;お招き部屋とスキマはスルー,0もスルー
SIF GROUPMATCH(ARG, OMANEKIBEYA(), SUKIMA(), 0)
	RETURNF 0
;MAIN_MAPを対象にしていた場合はエラーを吐く
SIF GET_MAPID(ARG) == MAIN_MAP
	THROW
;文字引数を省いた場合もエラー
SIF ARGS == ""
	THROW
SELECTCASE GET_MAPID(ARG)
	CASE 0
		RETURNF ODEKAKEMAP_SETTING_0(ARG, ARGS)
	CASE 1
		RETURNF ODEKAKEMAP_SETTING_1(ARG, ARGS)
	CASE 2
		RETURNF ODEKAKEMAP_SETTING_2(ARG, ARGS)
	CASE 3
		RETURNF ODEKAKEMAP_SETTING_3(ARG, ARGS)
	CASE 4
		RETURNF ODEKAKEMAP_SETTING_4(ARG, ARGS)
	CASE 5
		RETURNF ODEKAKEMAP_SETTING_5(ARG, ARGS)
	CASE 6
		RETURNF ODEKAKEMAP_SETTING_6(ARG, ARGS)
	CASE 7
		RETURNF ODEKAKEMAP_SETTING_7(ARG, ARGS)
	CASE 8
		RETURNF ODEKAKEMAP_SETTING_8(ARG, ARGS)
	CASE 9
		RETURNF ODEKAKEMAP_SETTING_9(ARG, ARGS)
	CASE 10
		RETURNF ODEKAKEMAP_SETTING_10(ARG, ARGS)
	CASE 12
		RETURNF ODEKAKEMAP_SETTING_12(ARG, ARGS)
	CASE 13
		RETURNF ODEKAKEMAP_SETTING_13(ARG, ARGS)
	CASE 14
		RETURNF ODEKAKEMAP_SETTING_14(ARG, ARGS)
	CASE 15
		RETURNF ODEKAKEMAP_SETTING_15(ARG, ARGS)
	CASEELSE
		THROW
ENDSELECT

;-----------------------------------------------------------
;맵의 지역 번호를 반환하는 함수, 지역 번호는 TFLAG:맵변환 의 맵 번호
;ARG    MAPID
;ARG:1  判定する場所ID（0ならMASTERの現在位置）
;-----------------------------------------------------------
@MAP_AREASELECT(ARG, ARG:1)
#FUNCTION
SIF !ARG:1
	ARG:1 = CFLAG:MASTER:현재위치
SELECTCASE ARG
	CASE 0
		RETURNF MAP_AREASELECT_0(ARG:1)
	CASE 1
		RETURNF MAP_AREASELECT_1(ARG:1)
	CASE 2
		RETURNF MAP_AREASELECT_2(ARG:1)
	CASE 3
		RETURNF MAP_AREASELECT_3(ARG:1)
	CASE 4
		RETURNF MAP_AREASELECT_4(ARG:1)
	CASE 5
		RETURNF MAP_AREASELECT_5(ARG:1)
	CASE 6
		RETURNF MAP_AREASELECT_6(ARG:1)
	CASE 7
		RETURNF MAP_AREASELECT_7(ARG:1)
	CASE 8
		RETURNF MAP_AREASELECT_8(ARG:1)
	CASE 9
		RETURNF MAP_AREASELECT_9(ARG:1)
	CASE 10
		RETURNF MAP_AREASELECT_10(ARG:1)
	CASE 12
		RETURNF MAP_AREASELECT_12(ARG:1)
	CASE 13
		RETURNF MAP_AREASELECT_13(ARG:1)
	CASE 14
		RETURNF MAP_AREASELECT_14(ARG:1)
	CASE 15
		RETURNF MAP_AREASELECT_15(ARG:1)
ENDSELECT

;-----------------------------------------------------------
;묘화하는 맵의 함수명을 반환하는 함수
;MAP_X.ERB参照
;ARG    MAPID
;-----------------------------------------------------------
@MAP_VIEWING_NAME(ARG)
#FUNCTIONS
SELECTCASE ARG
	CASE 0
		RETURNF MAP_VIEWING_NAME_0()
	CASE 1
		RETURNF MAP_VIEWING_NAME_1()
	CASE 2
		RETURNF MAP_VIEWING_NAME_2()
	CASE 3
		RETURNF MAP_VIEWING_NAME_3()
	CASE 4
		RETURNF MAP_VIEWING_NAME_4()
	CASE 5
		RETURNF MAP_VIEWING_NAME_5()
	CASE 6
		RETURNF MAP_VIEWING_NAME_6()
	CASE 7
		RETURNF MAP_VIEWING_NAME_7()
	CASE 8
		RETURNF MAP_VIEWING_NAME_8()
	CASE 9
		RETURNF MAP_VIEWING_NAME_9()
	CASE 10
		RETURNF MAP_VIEWING_NAME_10()
	CASE 12
		RETURNF MAP_VIEWING_NAME_12()
	CASE 13
		RETURNF MAP_VIEWING_NAME_13()
	CASE 14
		RETURNF MAP_VIEWING_NAME_14()
	CASE 15
		RETURNF MAP_VIEWING_NAME_15()
ENDSELECT

;-----------------------------------------------------------
;내부구조가 있는 장소의 내부 판정
;表示するマップ（TFLAG:マップ切り替え）によって変化するので注意
;ARG    MAPID
;ARG:1  表示場所ID
;ARG:2  内部場所ID
;-----------------------------------------------------------
@GETMAP_BUILDING(ARG, ARG:1, ARG:2)
#FUNCTION
SELECTCASE ARG
	CASE 0
		RETURNF GETMAP_BUILDING_0(ARG:1, ARG:2)
	CASE 1
		RETURNF GETMAP_BUILDING_1(ARG:1, ARG:2)
	CASE 2
		RETURNF GETMAP_BUILDING_2(ARG:1, ARG:2)
	CASE 3
		RETURNF GETMAP_BUILDING_3(ARG:1, ARG:2)
	CASE 4
		RETURNF GETMAP_BUILDING_4(ARG:1, ARG:2)
	CASE 5
		RETURNF GETMAP_BUILDING_5(ARG:1, ARG:2)
	CASE 6
		RETURNF GETMAP_BUILDING_6(ARG:1, ARG:2)
	CASE 7
		RETURNF GETMAP_BUILDING_7(ARG:1, ARG:2)
	CASE 8
		RETURNF GETMAP_BUILDING_8(ARG:1, ARG:2)
	CASE 9
		RETURNF GETMAP_BUILDING_9(ARG:1, ARG:2)
	CASE 10
		RETURNF GETMAP_BUILDING_10(ARG:1, ARG:2)
	CASE 12
		RETURNF GETMAP_BUILDING_12(ARG:1, ARG:2)
	CASE 13
		RETURNF GETMAP_BUILDING_13(ARG:1, ARG:2)
	CASE 14
		RETURNF GETMAP_BUILDING_14(ARG:1, ARG:2)
	CASE 15
		RETURNF GETMAP_BUILDING_15(ARG:1, ARG:2)
ENDSELECT


;-----------------------------------------
;私室に最も近い共用風呂を判定する関数
;ヒノキ風呂の効果を付与する際の判定に利用
;ARG =1のときは設置場所を表記する時に利用する
;基本は=0
;-----------------------------------------
@NEAR_BATH(ARG = 0)
#FUNCTION
RETURNF 0

;とりあえず凍結
[SKIPSTART]
;拠点でなければ判定しない
SIF !IN_HOME(CFLAG:MASTER:현재위치) && ARG == 0
	RETURNF 0
SELECTCASE CFLAG:MASTER:초기위치
	CASE 35, 32, 33, 34;博麗神社・三妖精の家地下室　三妖精の私室→30三妖精の家・風呂
		RETURNF 30
	CASE 51, 43, 44;夢幻遺跡・倉庫　夢美ちゆり私室→39夢幻遺跡・浴室
		RETURNF 39
	CASE 53, 15, 16, 17, 18, 19, 52, 54, 55;博麗神社・納戸　ほか、博麗神社内私室→13風呂
		RETURNF 13
	CASE 108, 109, 113 TO 120;命蓮寺・離れ　ほか命蓮寺内私室→112浴室
		RETURNF 112
	CASE 134, 125, 127, 128;神霊廟・蔵　ほか道場内私室→133湯殿
		RETURNF 133
	CASE 230, 226, 221, 224, 225, 231 TO 235;人里・あなたの部屋　ほか私室→228貸切浴場
		RETURNF 228
	CASE 304, 303, 311, 312, 320, 321, 326, 329, 331;霧の湖～紅魔館・空き小屋　ほか私室→333大浴場
		RETURNF 333
	CASE 340 TO 342, 344 TO 346, 348;廃洋館と霧の湖周りの私室→338廃洋館・風呂
		RETURNF 338
	CASE 410 TO 414, 423, 424, 427, 428, 430;永遠亭・空き部屋or二階空き部屋　ほか、私室→420風呂
		RETURNF 
	CASE 442, 432, 437, 439, 440, 443, 445;迷いの竹林・空き小屋　ほか、私室→441温泉
		RETURNF 441
	CASE 460, 451, 452, 457, 459, 463;夢幻館 空室　ほか、私室→454夢幻館 風呂
		RETURNF 454
	CASE 515, 512, 541 TO 544;魔法の森・魔理沙宅・倉庫　ほか、森の私室→514魔理沙宅・風呂
		RETURNF 514
	CASE 531, 521, 522, 523;魔法の森・人形の館・空き部屋　ほか私室→526人形の館・風呂
		RETURNF 526
	CASE 536, 535;魔法の森・エレン宅・倉庫　エレン私室→537エレン宅・風呂
		RETURNF 537
	CASE 618, 608, 609, 615, 616;是非直曲庁・空き部屋　ほか、私室→617風呂
		RETURNF 617
	CASE 625, 623, 624;冥界・あなたの部屋　妖夢、幽々子私室→627風呂
		RETURNF 627
	CASE 634, 633, 635, 638;八雲邸空部屋　紫藍橙私室→636風呂
		RETURNF 636
	CASE 644, 645;袿姫、磨弓私室→643霊長園の風呂
		RETURNF 643
	CASE 648;八千慧宅の寝室→646八千慧宅の風呂
		RETURNF 646
	CASE 651;早鬼宅の寝室→652早鬼宅の風呂
		RETURNF 652
	CASE 719, 734, 704, 706, 717, 733, 736;妖怪の山・山麓・秋姉妹の家・座敷or小屋　ほか私室→735水浴び場
		RETURNF 735
	CASE 728, 727;仙人の屋敷・空き部屋　華扇私室→721仙人の屋敷・風呂
		RETURNF 721
	CASE 810, 823, 807, 808, 809, 817, 818, 820;妖怪の山・山頂・山小屋or空室→825風呂
		RETURNF 825
	CASE 842, 839, 840, 841;比那名居邸物置　ほか、私室→837比那名居邸風呂
		RETURNF 837
	CASE 916, 943, 911, 912, 918, 919;地底・物置orあばら家→921風呂
		RETURNF 921
	CASE 1006 TO 1009, 1032, 1033, 1041, 1042;月の都と綿月亭→1030綿月亭 風呂
		RETURNF 1030
	CASE 1051, 1052;ドレミー宅→1042ドレミー宅 風呂
		RETURNF 1054
	CASE 1063, 1064, 1071, 1072;純狐邸→1049純狐邸 風呂
		RETURNF 1067
	CASEELSE
		RETURNF 0
ENDSELECT
[SKIPEND]