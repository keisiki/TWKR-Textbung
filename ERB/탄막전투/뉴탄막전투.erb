

@뉴탄막전투(ARG,ARG:1,모드)
#DIM 모드
#DIM 대피소
#DIM DYNAMIC 결과
;ARG - 내 번호
;ARG:1 - 상대방 번호
[IF_DEBUG]
    탄막디버그 = 1
[ENDIF]
대피소 = FLAG:그림표시
FLAG:그림표시 = 1

;임시로
ARG = MASTER
CALL 뉴탄막전투초기화(ARG,ARG:1)

IF 모드 == 1
    고로시 = 1
ELSE
    고로시 = 0
ENDIF

CALL 뉴탄막루틴(ARG, ARG:1)
FLAG:그림표시 = 대피소
결과 = RESULT
SIF BASE:MASTER:TSP < 0
    BASE:MASTER:TSP = 0
CALL T_승패처리(RESULT)

T_대상2 = 0
RETURN 결과

;SELECTCASE RESULT
;   CASE -2 ;ARG의 항복
;    CASE -1 ;ARG의 패배
;    CASE 0 ;무승부
;    CASE 1 ;ARG의 승리
;ENDSELECT

@뉴탄막전투초기화(ARG,ARG:1)
#DIM 대상
;일반적으로 ARG = MASTER
;일반적으로 ARG:1 = TARGET

T_대상1 = ARG
T_대상2 = ARG:1 
LOCAL = 0

VARSET T_버프
VARSET 사고패턴용변수
VARSET T_시스템
VARSET T_턴주인
VARSET T_턴반대
VARSET T_시전자
VARSET T_시전자반대
VARSET SKILL_ARRAY
VARSET 소지스킬타입
VARSET 무조건항복
VARSET 데미지스택_대상
VARSET 데미지스택_속성
VARSET 데미지스택_존재
VARSET 데미지스택_피해
VARSET T_위치
VARSET T_행동기회

FOR LOCAL, 1, 2000
    T_시전자 = T_대상1
    T_시전자반대 = T_대상2
    TRYCALLFORM ONGOING_T_SKILL{LOCAL}(MASTER,"초기화")
    T_시전자 = T_대상2
    T_시전자반대 = T_대상1
    TRYCALLFORM ONGOING_T_SKILL{LOCAL}(TARGET,"초기화")
NEXT

FOR LOCAL, 700, 800 ;현재 뉴탄막 내에서 TCVAR를 사용하고 있는 범위
    ;뉴탄막 내 모든 TCVAR 0으로 초기화
    CVARSET TCVAR, LOCAL
NEXT

REPEAT 2
    대상 = ARG:COUNT
    TCVAR:대상:T_체력 = (MAXBASE:대상:체력/4)+MIN((40*CFLAG:대상:인내),10000)+500
    TCVAR:대상:T_최대체력 = TCVAR:대상:T_체력
    TCVAR:대상:T_힘 = CFLAG:대상:힘
    TCVAR:대상:T_지성 = CFLAG:대상:지성
    TCVAR:대상:T_인내 = CFLAG:대상:인내
    TCVAR:대상:T_속도 = CFLAG:대상:속도
    TCVAR:대상:T_운 = CFLAG:대상:운
    TCVAR:대상:T_물리내성 = CFLAG:대상:물리내성
    TCVAR:대상:T_화염내성 = CFLAG:대상:화염내성
    TCVAR:대상:T_빙결내성 = CFLAG:대상:빙결내성
    TCVAR:대상:T_전격내성 = CFLAG:대상:전격내성
    TCVAR:대상:T_질풍내성 = CFLAG:대상:질풍내성
    TCVAR:대상:T_마력내성 = CFLAG:대상:마력내성
    TCVAR:대상:T_수격내성 = CFLAG:대상:수격내성
    TCVAR:대상:T_정신내성 = CFLAG:대상:정신내성
    TCVAR:대상:T_관통내성 = CFLAG:대상:관통내성
REND
T_위치:T_대상1:0 = TB_위치값한계/2 - TB_위치이격값/2
T_위치:T_대상2:0 = TB_위치값한계/2 + TB_위치이격값/2
CALL 공방세팅(ARG, ARG:1)

;----
;기타변수 초기화 
;----
IF !후처리인터셉트
    항복불가 = 0
ELSE
    항복불가 = 1
ENDIF
항복함 = 0
도망감 = 0
T_TIME = 0
;----

@공방세팅(ARG, ARG:1)
#DIM 세팅대상
#DIM 공격력
#DIM 방어력
#DIM DYNAMIC 변동량, 5
#DIM DYNAMIC 보정
;ARG = 대상1, ARG:1 = 대상2
FOR LOCAL, 0, 2
    
    세팅대상 = ARG:LOCAL
    
    변동량:0 = TB_SUM_VALUE(세팅대상,TCV_힘)
    변동량:1 = TB_SUM_VALUE(세팅대상,TCV_지성)
    변동량:2 = TB_SUM_VALUE(세팅대상,TCV_인내)
    변동량:3 = TB_SUM_VALUE(세팅대상,TCV_속도)
    변동량:4 = TB_SUM_VALUE(세팅대상,TCV_운)
    TCVAR:세팅대상:T_힘 = MAX(0,변동량:0 + CFLAG:세팅대상:힘 - TCVAR:세팅대상:부상_힘)
    TCVAR:세팅대상:T_지성 = MAX(0,변동량:1 + CFLAG:세팅대상:지성 - TCVAR:세팅대상:부상_지성)
    TCVAR:세팅대상:T_인내 = MAX(0,변동량:2 + CFLAG:세팅대상:인내 - TCVAR:세팅대상:부상_인내)
    TCVAR:세팅대상:T_속도 = MAX(0,변동량:3 + CFLAG:세팅대상:속도 - TCVAR:세팅대상:부상_속도)
    TCVAR:세팅대상:T_운 = MAX(0,변동량:4 + CFLAG:세팅대상:운 - TCVAR:세팅대상:부상_운)
    보정 = TB_SUM_VALUE(세팅대상,TCV_증폭) - TB_SUM_VALUE(세팅대상,TCV_약화)
    TCVAR:세팅대상:T_공격력보정 = 보정
    보정 = TB_SUM_VALUE(세팅대상,TCV_회피) - TB_SUM_VALUE(세팅대상,TCV_취약)
    TCVAR:세팅대상:T_방어력보정 = 보정
    공격력 = (TCVAR:세팅대상:T_힘*10)+ (TCVAR:세팅대상:T_속도*5)+(TCVAR:세팅대상:T_운)+ABL:세팅대상:레벨
    방어력 = (TCVAR:세팅대상:T_속도/4)+ (TCVAR:세팅대상:T_인내)+(TCVAR:세팅대상:T_운/4)+(ABL:세팅대상:레벨)
    IF TALENT:세팅대상:체형 == -5
        TIMES 공격력, 0.8
        TIMES 방어력, 1.5
    ELSEIF TALENT:세팅대상:체형 == 3
        TIMES 공격력, 1.5
        TIMES 방어력, 0.8
    ENDIF
    IF BASE:세팅대상:술기운 > MAXBASE:세팅대상:술기운 * 80 / 100
        TIMES 공격력, 1.05
        TIMES 방어력, 0.95
    ENDIF 
    SELECTCASE ABL:세팅대상:전투능력
        CASE 0
            TIMES 공격력, 1.0
            TIMES 방어력, 1.0
        CASE 1
            TIMES 공격력, 1.3
            TIMES 방어력, 1.4
        CASE 2
            TIMES 공격력, 1.6
            TIMES 방어력, 1.7
        CASE 3
            TIMES 공격력, 1.9
            TIMES 방어력, 2.0
        CASE 4
            TIMES 공격력, 2.2
            TIMES 방어력, 2.3
        CASE 5
            TIMES 공격력, 2.5
            TIMES 방어력, 2.6
        CASE 6
            TIMES 공격력, 2.7
            TIMES 방어력, 2.8
        CASE 7
            TIMES 공격력, 2.9
            TIMES 방어력, 3.0
        CASE 8
            TIMES 공격력, 3.0
            TIMES 방어력, 3.1
        CASE 9
            TIMES 공격력, 3.1
            TIMES 방어력, 3.2
        CASE 10
            TIMES 공격력, 3.2
            TIMES 방어력, 3.3
        CASE 11
            TIMES 공격력, 3.3
            TIMES 방어력, 3.4
        CASE 12
            TIMES 공격력, 3.4
            TIMES 방어력, 3.5
        CASE 13
            TIMES 공격력, 3.5
            TIMES 방어력, 3.6
        CASE 14
            TIMES 공격력, 3.6
            TIMES 방어력, 3.7
        CASE 15
            TIMES 공격력, 3.7
            TIMES 방어력, 3.8
        CASE 16
            TIMES 공격력, 3.8
            TIMES 방어력, 3.9
        CASE 17
            TIMES 공격력, 3.9
            TIMES 방어력, 4.0
        CASE 18
            TIMES 공격력, 4.0
            TIMES 방어력, 4.1
        CASE 19
            TIMES 공격력, 4.1
            TIMES 방어력, 4.2
        CASEELSE
            TIMES 공격력, 4.5
            TIMES 방어력, 4.6
    ENDSELECT
    ;공격력 = 공격력 + ((공격력 * TCVAR:세팅대상:T_공격력보정)/100) ; 데미지 처리로 이관
    방어력 = 방어력 + ((방어력 * TCVAR:세팅대상:T_방어력보정)/100)
    ;MASTER나 TARGET일때의 추가처리
    ;차이가 필요하다면 SELECTCASE 전투능력을 여기 안으로 옮겨오면 됨
    IF 세팅대상 == MASTER
    
    ELSEIF 세팅대상 == TARGET
        IF 고로시 == 1
            TIMES 공격력, 2.0
            TIMES 방어력, 2.0
        ENDIF
        IF RELATION:TARGET:MASTER < 80
            IF 고로시 == 1
                TIMES 공격력, 1.5
                TIMES 방어력, 1.1
            ENDIF
        ENDIF
    ELSE
        THROW 이 함수는 MASTER, TARGET 이외의 경우를 상정하지 않았습니다.
    ENDIF
    ;공격력 += (TCVAR:세팅대상:T_공격력보정)
    ;방어력 += (TCVAR:세팅대상:T_방어력보정)
    TCVAR:세팅대상:T_공격력 = 공격력
    TCVAR:세팅대상:T_방어력 = 방어력
    TCVAR:세팅대상:T_물리내성 = CFLAG:세팅대상:물리내성 + TB_SUM_VALUE(세팅대상,TCV_물리내성) - TCVAR:세팅대상:부상_물리내성
    TCVAR:세팅대상:T_화염내성 = CFLAG:세팅대상:화염내성 + TB_SUM_VALUE(세팅대상,TCV_화염내성) - TCVAR:세팅대상:부상_화염내성
    TCVAR:세팅대상:T_빙결내성 = CFLAG:세팅대상:빙결내성 + TB_SUM_VALUE(세팅대상,TCV_빙결내성) - TCVAR:세팅대상:부상_빙결내성
    TCVAR:세팅대상:T_전격내성 = CFLAG:세팅대상:전격내성 + TB_SUM_VALUE(세팅대상,TCV_전격내성) - TCVAR:세팅대상:부상_전격내성
    TCVAR:세팅대상:T_질풍내성 = CFLAG:세팅대상:질풍내성 + TB_SUM_VALUE(세팅대상,TCV_질풍내성) - TCVAR:세팅대상:부상_질풍내성
    TCVAR:세팅대상:T_마력내성 = CFLAG:세팅대상:마력내성 + TB_SUM_VALUE(세팅대상,TCV_마력내성) - TCVAR:세팅대상:부상_마력내성
    TCVAR:세팅대상:T_수격내성 = CFLAG:세팅대상:수격내성 + TB_SUM_VALUE(세팅대상,TCV_수격내성) - TCVAR:세팅대상:부상_수격내성
    TCVAR:세팅대상:T_정신내성 = CFLAG:세팅대상:정신내성 + TB_SUM_VALUE(세팅대상,TCV_정신내성) - TCVAR:세팅대상:부상_정신내성
    ;관통내성은 딱히 없다
    TCVAR:세팅대상:T_이동력 = 5 + MIN(ARG능력치(세팅대상,"속도") / 10 , 35) + MIN(ARG능력치(세팅대상,"속도") / 50, 6) + MIN(ARG능력치(세팅대상,"속도") / 100, 3)
NEXT

TCVAR:ARG:T_적중률 = 75 + MIN(11,MAX(0,TCVAR:(ARG):T_속도 - TCVAR:(ARG:1):T_속도) / 10) + MIN(4,MAX(0,TCVAR:(ARG):T_운 - TCVAR:(ARG:1):T_운) / 10)
TCVAR:(ARG:1):T_적중률 = 75 + MIN(11,MAX(0,TCVAR:(ARG:1):T_속도 - TCVAR:(ARG):T_속도) / 10) + MIN(4,MAX(0,TCVAR:(ARG:1):T_운 - TCVAR:(ARG):T_운) / 10)

TCVAR:ARG:T_적중률 += TB_SUM_VALUE(ARG,TCV_적중)
TCVAR:(ARG:1):T_적중률 += TB_SUM_VALUE(ARG:1,TCV_적중)

IF TCVAR:ARG:T_적중률 > 100
    TCVAR:ARG:T_적중률 = 100
ENDIF
IF TCVAR:(ARG:1):T_적중률 > 100
    TCVAR:(ARG:1):T_적중률 = 100
ENDIF
RETURN 0

@뉴탄막루틴(대상1, 대상2)
#DIM 대상1 ;플레이어
#DIM 대상2 ;상대방
#DIM 턴넘김 ;0이면 턴이 넘어감

;RETURN 값에 따른 구분
;-2 = 대상1의 항복
;-1 = 대상1의 패배
;0 = 무승부
;1 = 대상1의 승리
T_턴주인 = 대상1
T_턴반대 = 대상2
CALL T_턴처리(대상2, 대상1)
CALL T_시스템처리(10)
$뉴탄막루틴시작

;---------
;내(대상1) 턴
;---------
DRAWLINE
PRINTL
PRINTW 내 턴 시작
PRINTL
DRAWLINE
CALL T_턴처리(대상1, 대상2)
;승부처리
;일단 체력만 기준으로 봄
;무승부 처리
IF TCVAR:대상1:T_체력 <= 0 && TCVAR:대상2:T_체력 <= 0
    RETURN 1
;대상1 승리
ELSEIF TCVAR:대상2:T_체력 <= 0
    RETURN 0
ENDIF
턴넘김 = RESULT
CALL TB_MINUS_WHO(대상2)
IF 턴넘김 == 1
    CALL T_시스템처리(2)
    $대상1턴시작
    CALL T_쓰러짐체크
    IF RESULT != -1
        RETURN RESULT
    ENDIF
    T_시전자 = 대상1
    T_시전자반대 = 대상2
    WHILE 1 ;$내턴입력
    CALL 뉴탄막상태창
    CALL 뉴탄막커맨드창
    INPUT
    
    IF RESULT == 100 && 행동기회여부(대상1,T_통상행동)
        ;공격 ;RETURN 0:회피 1:공격성공
        CALL T_COM공격한다
        BREAK
    ELSEIF RESULT == 101 && 행동기회여부(대상1,T_통상행동)
        ;스킬사용
        ;RETURN 0:시전실패 1:시전성공
        CALL T_COM스킬사용
        IF RESULT == 1
            BREAK
        ENDIF
    ELSEIF RESULT == 102 && 행동기회여부(대상1,T_통상행동)
        ;아이템사용
        CALL 뉴탄막아이템
        IF RESULT == 1
            BREAK
        ENDIF
    ELSEIF RESULT == 200 && 행동기회여부(대상1,T_이동행동)
        CALL T_COM이동한다
        IF RESULT == 1
            BREAK
        ENDIF
    ELSEIF RESULT == 201 && 행동기회여부(대상1,T_통상행동)
        ;회피
        CALL T_COM회피한다(대상1)
        BREAK
    ELSEIF RESULT == 202 && 행동기회여부(대상1,T_통상행동)
        ;도주
        CALL T_COM도망간다(대상1)
        BREAK
    ELSEIF RESULT == 500
        이동행동자동무시 = !이동행동자동무시
    ELSEIF RESULT == 501
        CALL T_COM턴넘김
        BREAK
    ELSEIF RESULT == 999 && 행동기회여부(대상1,T_통상행동)
        ;항복
        CALL T_항복(대상1)
        IF RESULT == 0
            ;항복 거절당함

        ELSE
            RETURN 2
        ENDIF
    ELSE
    ENDIF
    ;CALL 뉴탄막상태창
    WEND
ENDIF

IF 항복함 == 1
    RETURN 2
ELSEIF 항복함 == 2
    RETURN 0
ENDIF
IF TB_SUM_VALUE(대상1,TCV_폭주) > 0&&!TB_SUM_VALUE(대상1,TCV_기절)
    FOR LOCAL,0,TB버프한계
        IF T_버프:TB대상:LOCAL == 대상1&&T_버프:TB내용:LOCAL == TCV_폭주
            T_행동기회:T_턴주인:1 += T_버프:TB값:LOCAL
            T_버프:TB값:LOCAL = 0
            CALLF TB_RESET(LOCAL)
        ENDIF
    NEXT
ENDIF
IF !도망감
    IF T_추가턴처리(대상1) || (행동기회여부(대상1,T_이동행동) && !이동행동자동무시)
        GOTO 대상1턴시작
    ENDIF
ENDIF

;승부처리
;일단 체력만 기준으로 봄
;무승부 처리
IF 도망감
    IF 도망감 == 1
        CALL T_시스템처리(203)
    ELSEIF 도망감 == 2
        CALL T_시스템처리(204)
    ENDIF
    IF TCVAR:대상1:T_체력 <= 0 && TCVAR:대상2:T_체력 <= 0
        RETURN 1
    ELSEIF TCVAR:대상1:T_체력 <= 0
        RETURN 2
    ELSEIF TCVAR:대상2:T_체력 <= 0
        RETURN 0
    ENDIF
    IF 도망감
        RETURN 1
    ENDIF
ENDIF
CALL T_쓰러짐체크
IF RESULT != -1
    RETURN RESULT
ENDIF
;-----------------
;--------
;적(대상2) 턴
;--------
DRAWLINE
PRINTL
PRINTW 적턴 시작
PRINTL
CALL T_턴처리(대상2, 대상1)
턴넘김 = RESULT ;AI가 기절/혼란중인 경우 T_턴처리에서 처리됨
CALL TB_MINUS_WHO(대상1)
IF 턴넘김 == 1
    CALL T_시스템처리(1)
    $대상2턴시작
    CALL 뉴탄막상태창
    CALL T_쓰러짐체크
    IF RESULT != -1
        RETURN RESULT
    ENDIF
    T_시전자 = 대상2
    T_시전자반대 = 대상1
    ;AI 활동영역
    CALL 사고패턴결정(대상2)
    PRINTL
ENDIF

IF 항복함 == 1
    RETURN 2
ELSEIF 항복함 == 2
    RETURN 0
ENDIF
IF TB_SUM_VALUE(대상2,TCV_폭주) > 0&&!TB_SUM_VALUE(대상2,TCV_기절)
    FOR LOCAL,0,TB버프한계
        IF T_버프:TB대상:LOCAL == 대상2&&T_버프:TB내용:LOCAL == TCV_폭주
            T_행동기회:T_턴주인:1 += T_버프:TB값:LOCAL
            T_버프:TB값:LOCAL = 0
            CALLF TB_RESET(LOCAL)
        ENDIF
    NEXT
ENDIF
IF TB_SUM_VALUE(대상2,TCV_폭주) > 0&&!TB_SUM_VALUE(대상2,TCV_기절)
    FOR LOCAL,0,TB버프한계
        IF T_버프:TB대상:LOCAL == 대상2&&T_버프:TB내용:LOCAL == TCV_폭주
            T_행동기회:T_턴주인:1 += T_버프:TB값:LOCAL
            T_버프:TB값:LOCAL = 0
            CALLF TB_RESET(LOCAL)
        ENDIF
    NEXT
ENDIF
IF !도망감
    IF T_추가턴처리(대상2) || 행동기회여부(대상2,T_이동행동)
        GOTO 대상2턴시작
    ENDIF
ENDIF
DRAWLINE
PRINTL 턴 엔드
DRAWLINE
;-------
CALL T_턴엔드
;PRINTW

;승부처리
;일단 체력만 기준으로 봄
;무승부 처리
IF 도망감
    IF 도망감 == 1
        CALL T_시스템처리(203)
    ELSEIF 도망감 == 2
        CALL T_시스템처리(204)
    ENDIF
    IF TCVAR:대상1:T_체력 <= 0 && TCVAR:대상2:T_체력 <= 0
        RETURN 1
    ELSEIF TCVAR:대상1:T_체력 <= 0
        RETURN 2
    ELSEIF TCVAR:대상2:T_체력 <= 0
        RETURN 0
    ENDIF
    IF 도망감
        RETURN 1
    ENDIF
ENDIF
CALL T_쓰러짐체크
IF RESULT != -1
    RETURN RESULT
ENDIF

GOTO 뉴탄막루틴시작


@T_추가턴처리(ARG)
#FUNCTION
IF T_행동기회:ARG:0 > 0
    RETURNF 1
ELSE
    RETURNF 0
ENDIF

@T_쓰러짐체크
#DIM DYNAMIC 대상1
#DIM DYNAMIC 대상2
대상1 = T_대상1
대상2 = T_대상2
;굳이 이러는 이유는 밑에걸 고치기 귀찮아서...언젠가는 고치겠지???
IF TCVAR:대상1:T_체력 <= 0 && TCVAR:대상2:T_체력 <= 0
    ;동시쓰러짐
    ;시스템처리
    CALL T_시스템처리(200)
    CALL T_시스템처리(201)
    ;동시에 쓰러짐
    IF TCVAR:대상1:T_체력 <= 0 && TCVAR:대상2:T_체력 <= 0
        RETURN 1
    ;한쪽만 쓰러짐
    ELSEIF TCVAR:대상1:T_체력 <= 0
        RETURN 2
    ELSEIF TCVAR:대상2:T_체력 <= 0
        RETURN 0
    ENDIF
;대상1 체력 끝
ELSEIF TCVAR:대상1:T_체력 <= 0
    ;시스템처리
    CALL T_시스템처리(200)
    ;동시에 쓰러짐
    IF TCVAR:대상1:T_체력 <= 0 && TCVAR:대상2:T_체력 <= 0
        RETURN 1
    ;한쪽만 쓰러짐
    ELSEIF TCVAR:대상1:T_체력 <= 0
        RETURN 2
    ELSEIF TCVAR:대상2:T_체력 <= 0
        RETURN 0
    ENDIF
;대상2 체력 끝
ELSEIF TCVAR:대상2:T_체력 <= 0
    ;시스템처리
    CALL T_시스템처리(201)
    ;동시에 쓰러짐
    IF TCVAR:대상2:T_체력 <= 0 && TCVAR:대상1:T_체력 <= 0
        RETURN 1
    ;한쪽만 쓰러짐
    ELSEIF TCVAR:대상1:T_체력 <= 0
        RETURN 2
    ELSEIF TCVAR:대상2:T_체력 <= 0
        RETURN 0
    ENDIF
ENDIF
RETURN -1

@T_턴처리(ARG, ARG:1)
;RETURN = 1이면 턴주인 턴, 0이라면 턴 넘어감
T_턴주인 = ARG 
T_턴반대 = ARG:1

;CALL 버프감소처리(ARG)

CALL 공방세팅(ARG, ARG:1)
T_행동기회:T_턴주인:0 = 1
T_행동기회:T_턴주인:1 = 1

;상태이상에 따른 종료처리
IF TB_SUM_REMAIN(ARG,TCV_기절)
    PRINTFORMW %ARG는% 기절중이라 행동할 수 없다!
    RETURN 0
ENDIF
IF TB_SUM_REMAIN(ARG,TCV_혼란) &&RAND:2 == 0
    PRINTFORMW %ARG는% 혼란에 빠져 행동할수 없다!
    RETURN 0
ENDIF
RETURN 1

@T_턴엔드
FOR LOCAL,1,1000
    T_시전자 = T_턴주인
    T_시전자반대 = T_턴반대
    TRYCALLFORM ONGOING_T_SKILL{LOCAL}(T_턴주인,"턴엔드")
    T_시전자 = T_턴반대
    T_시전자반대 = T_턴주인
    TRYCALLFORM ONGOING_T_SKILL{LOCAL}(T_턴반대,"턴엔드")
NEXT


T_TIME++

@뉴탄막커맨드창

CALL 뉴탄막커맨드창_색깔설정("통상")
PRINTFORMLC [100] 공격 한다
;PRINT    
CALL 뉴탄막커맨드창_색깔설정("통상")
PRINTFORMLC [101] 스킬 사용
;PRINT    
CALL 뉴탄막커맨드창_색깔설정("통상")
PRINTFORMLC [102] 아이템 사용

IF 이동행동자동무시
    SETCOLOR 0X808080
ELSE
    RESETCOLOR
ENDIF
PRINTFORMC [500] 이동행동사용 : \@ 이동행동자동무시 == 1 ? 스킵한다 # 사용한다 \@
RESETCOLOR
;----------------
PRINTL


CALL 뉴탄막커맨드창_색깔설정("이동")
PRINTFORMLC [200] 이동 한다
;PRINT    
CALL 뉴탄막커맨드창_색깔설정("통상")
PRINTFORMLC [201] 회피에 집중
;PRINT     
CALL 뉴탄막커맨드창_색깔설정("통상")
PRINTFORMLC [202] 도망친다

PRINTFORMLC [501] 턴 넘기기

PRINTL


;-----------

CALL 뉴탄막커맨드창_색깔설정("통상")
PRINTFORM [999] 항복
PRINTL
RESETCOLOR
DRAWLINE


@뉴탄막커맨드창_색깔설정(ARGS)
IF ARGS == "이동"
    IF 행동기회여부(T_대상1,T_이동행동)
        RESETCOLOR
    ELSE
        SETCOLOR 0X808080
    ENDIF
ELSEIF ARGS == "통상"
    IF 행동기회여부(T_대상1,T_통상행동)
        RESETCOLOR
    ELSE
        SETCOLOR 0X808080
    ENDIF
ELSE
    RESETCOLOR
ENDIF


@T_데미지스택(ARG,데미지,속성)
;ARG = 공격받는 대상
#DIM DYNAMIC 데미지
#DIMS DYNAMIC 속성
FOR LOCAL,0,24
    IF 데미지스택_존재:LOCAL == 0
        데미지스택_존재:LOCAL = 1
        데미지스택_대상:LOCAL = ARG
        데미지스택_피해:LOCAL = 데미지
        데미지스택_속성:LOCAL = %속성%
        RETURN 1
    ENDIF
NEXT
RETURN -1

@데미지스택호출
#DIM DYNAMIC 대상
#DIM DYNAMIC 데미지
#DIMS DYNAMIC 속성
스택처리중 = 1
FOR LOCAL,0,24
    IF 데미지스택_존재:LOCAL == 1
        데미지스택_존재:LOCAL = 0
        대상 = 데미지스택_대상:LOCAL
        데미지 = 데미지스택_피해:LOCAL
        속성 = %데미지스택_속성:LOCAL%
        DRAWLINE
        PRINTFORML 피해 스택 : {LOCAL+1}
        SETCOLOR 0XFFFF00
        CALL T_데미지(대상,데미지,속성)
        RESETCOLOR
        DRAWLINE
    ENDIF
NEXT
스택처리중 = 0

@T_데미지(ARG,데미지,속성)
;ARG = 공격받는 대상
#DIM DYNAMIC 데미지
#DIMS DYNAMIC 속성
#DIMS DYNAMIC 속성내성STR
#DIM DYNAMIC 속성내성값
#DIM DYNAMIC 감소율
#DIM DYNAMIC 원래데미지
#DIM DYNAMIC 공격자
#DIM DYNAMIC 완전방어여부
;감소율은 XX%단위
원래데미지 = 데미지
공격자 = 사용자반대(ARG)
PRINTFORM 피해량 : {데미지}
;대상에 따라 달라지는 보정 처리
IF ARG == MASTER
    SIF 고로시 == 1
        TIMES 데미지 , 1.5
ENDIF

데미지 += ((데미지 * TCVAR:공격자:T_공격력보정)/100)

SELECTCASE 속성
    CASE "물리", "화염", "빙결", "전격", "질풍", "수격", "마력", "정신"
        속성내성STR '= @"%속성%내성"
        속성내성값 = ARG능력치(ARG, 속성내성STR)
        ;속성취약시 음수이므로 빼면 증가, 속성내성시 양수이므로 빼면 감소
        데미지 = MAX((데미지 - 속성내성값), 0)
        IF 속성내성값 > 0 ;속성내성으로 데미지 감소
            PRINTFORM  -%속성%내성{속성내성값}
        ELSEIF 속성내성값 < 0 ;속성 취약으로 데미지 증가
            PRINTFORM  +%속성%취약{속성내성값 * -1}
        ENDIF

    CASE "고정"
        ;처리없음
    CASE "저주"
        PRINTL
        IF ARG != MASTER
            데미지 = TCVAR:T_대상2:T_체력/2
            데미지 = MIN(데미지,8000)
        ENDIF
        IF TB_SUM_REMAIN(ARG,TCV_면역) 
            PRINTFORMW \@ ARG == MASTER ? # %ARG는% \@ {데미지}만큼의 %속성% 피해를 받아야 했지만, 가볍게 흘려버렸다!
        ELSE
            PRINTFORMW \@ ARG == MASTER ? # %ARG는% \@ {데미지}만큼의 %속성% 피해를 받았다!
            TCVAR:ARG:T_체력 -= 데미지
        ENDIF
        PRINTL
        RETURN 1
    CASEELSE
        ;특수피해 처리용(독이나 출혈같은거)    
        PRINTL
        IF TB_SUM_REMAIN(ARG,TCV_면역) 
            PRINTFORMW \@ ARG == MASTER ? # %ARG는% \@ {데미지}만큼의 %속성% 피해를 받아야 했지만, 가볍게 흘려버렸다!
        ELSE
            PRINTFORMW \@ ARG == MASTER ? # %ARG는% \@ {데미지}만큼의 %속성% 피해를 받았다!
            TCVAR:ARG:T_체력 -= 데미지
        ENDIF
        PRINTL
        RETURN 1
ENDSELECT
IF ARG == MASTER
    IF ABL:MASTER:레벨 + 50 <= ABL:TARGET:레벨
        PRINTFORM (레벨차로 인한 추가 피해 +
        LOCAL = SQRT(POWER(ABL:TARGET:레벨 - ABL:MASTER:레벨,2)/450)
        IF LOCAL > 15
            LOCAL = 15
        ENDIF
        PRINTFORML {(LOCAL*100) + 100}\%)
        데미지 *= LOCAL
    ENDIF
ENDIF
LOCAL = 0
IF TCVAR:ARG:T_방어력 >= 0
    ; 감소율 = 100 - (100/100+방어력)인데 중간 과정에 소수가 들어가지 않게한 조치
    감소율 = 100 - ((100000 / MAX((100 + TCVAR:ARG:T_방어력), 1))/10)
    PRINTL
    PRINTFORML 감소율 : {감소율}\% 
    데미지 = (데미지 * (100-감소율))/100
    IF 데미지 <= 0
        완전방어여부 = 1
    ENDIF
ELSE
    ;데미지 += TCVAR:ARG:T_방어력
    ;SIF TCVAR:ARG:T_방어력 < 0
    ;    PRINTFORM  +방어불가{TCVAR:ARG:T_방어력 * -1}
ENDIF

;판정문장 출력 처리
PRINTL
;일반적인 공격
LOCAL:1 = 0
IF ARG == T_턴반대 && 크리티컬판정(TCVAR:T_턴주인:T_운)
    PRINTFORML 급소에 \@ ARG == MASTER ? 맞았# 맞혔\@다!
    데미지 += MAX(TCVAR:T_턴주인:T_운/2 - (완전방어여부 * ARG능력치(ARG, "관통내성")) , 0)
    TIMES 데미지 , 1.5
    LOCAL = MAX(TCVAR:T_턴주인:T_운/2 - (완전방어여부 * ARG능력치(ARG, "관통내성")) , 0)
    TIMES LOCAL , 1.5
    IF 데미지 == LOCAL
        IF T_턴주인 == MASTER
            LOCAL:1 == 1
        ELSE
            LOCAL:1 == 2
        ENDIF
    ENDIF

;상태이상 등으로 인한 데미지
ELSEIF ARG == T_턴주인 && 크리티컬판정(TCVAR:T_턴반대:T_운)
    PRINTFORML 급소에 \@ ARG == MASTER ? 맞았# 맞혔\@다!
    데미지 += TCVAR:T_턴반대:T_운
    TIMES 데미지 , 1.5
    LOCAL = TCVAR:T_턴반대:T_운
    TIMES LOCAL , 1.5
    IF 데미지 == LOCAL&&스택처리중 == 0
        IF ARG != MASTER
            LOCAL:1 == 1
        ELSE
            LOCAL:1 == 2
        ENDIF
    ENDIF
ENDIF


IF ARG != MASTER
    CALL T_시스템처리(106,데미지,원래데미지,ARG)
ELSE
    CALL T_시스템처리(107,데미지,원래데미지,ARG)
ENDIF
IF 데미지 > 0
    IF TB_SUM_REMAIN(ARG,TCV_면역) 
        PRINTFORMW \@ ARG == TARGET ? %CALLNAME:ARG%에게 # \@ {데미지}만큼의 %속성% 피해를 \@ ARG == TARGET ? 주어# 받아\@야 했지만, 가볍게 흘려져버렸다!
    ELSE
        IF TB_SUM_VALUE(ARG,TCV_보호)
            PRINTFORML \@ ARG == TARGET ? %ARG는% # \@ {데미지}만큼의 %속성% 피해를 \@ ARG == TARGET ? 주어# 받아\@야 했지만, {TB_SUM_VALUE(ARG,TCV_보호)}만큼의 보호막으로 피해를 감쇄했다!
            CALL TB_MINUS_TYPE(ARG,-1,데미지,TCV_보호)
            데미지 = RESULT
        ENDIF
        IF 데미지 > 0
            TCVAR:ARG:T_체력 -= 데미지
            PRINTFORMW \@ ARG == TARGET ? %CALLNAME:ARG%에게 # \@ {데미지}만큼의 %속성% 피해를 \@ ARG == TARGET ? 주었# 받았\@다!
        ELSE
            PRINTFORMW 완벽하게 상쇄되었다!
        ENDIF
    ENDIF
ELSEIF 데미지 <= -100
    PRINTFORMW \@ ARG == TARGET ? %타겟은% 가볍게 피해버렸다... # 가볍게 피했다 \@
ELSE
    PRINTFORMW \@ ARG == MASTER ? # %타겟은% 아슬아슬하게 탄을 \@ 피했다!
ENDIF
PRINTL
IF LOCAL:1 == 1
    CALL T_시스템처리(220)
ELSEIF LOCAL:1 == 2
    CALL T_시스템처리(221)
ENDIF
IF ARG != MASTER
    CALL T_시스템처리(104,데미지,원래데미지,ARG)
ELSE
    CALL T_시스템처리(105,데미지,원래데미지,ARG)
ENDIF
SIF 스택처리중 == 0
    CALL 데미지스택호출
RETURN 데미지

@T_회복(ARG,ARG:1)
;ARG = 대상
;ARG:1 = 회복량
IF ARG:1 < 0
    RETURN 0
ENDIF
IF TCVAR:ARG:T_체력 + ARG:1 > TCVAR:ARG:T_최대체력
    SETCOLOR 0x00FF00
    PRINTFORML %ARG는% 최대 체력까지 회복했다!
    RESETCOLOR
    PRINTFORML %ARG의% 체력 : {TCVAR:ARG:T_체력} -> {TCVAR:ARG:T_최대체력}
    TCVAR:ARG:T_체력 = TCVAR:ARG:T_최대체력
ELSE
    SETCOLOR 0x00FF00
    PRINTFORML %ARG는% {ARG:1}만큼의 체력을 회복했다!
    RESETCOLOR
    PRINTFORM %ARG의% 체력 : {TCVAR:ARG:T_체력} ->
    TCVAR:ARG:T_체력 += ARG:1
    PRINTFORML  {TCVAR:ARG:T_체력}
ENDIF
RETURN 1


@크리티컬판정(ARG)
#FUNCTION
#DIM DYNAMIC 크리티컬
#DIM DYNAMIC 크리티컬판정조절
크리티컬 = MIN(ARG, 300)
크리티컬판정조절 = 350
IF 크리티컬 >= RAND:크리티컬판정조절 + 1
    ;명중
    RETURNF 1
ELSE
    ;빗나감
    RETURNF 0
ENDIF

;============================================
;현재 T_특수지속시간_ID = TCVAR:720~769
;TCVAR:720~729 = 기본수치보정(감소) 지속시간
;TCVAR:730~749 = 상태이상 지속시간
;TCVAR:750~769 = 버프 지속시간
;------------------------------------------
;보정량 관련 ID번호
;기본수치보정량 = TCVAR:710~719
;버프보정량 = TCVAR:770~789
;============================================
;@상태이상감소처리(ARG)
;삭제됨

;@버프부여(ARG, 버프, ARG:1, ARG:2)
;삭제됨

;@버프효과처리(ARG)
;삭제됨
;@버프감소처리(ARG)
;삭제됨


@사용자반대(ARG)
#FUNCTION
IF ARG == MASTER
    RETURNF TARGET
ELSEIF ARG == TARGET
    RETURNF MASTER
ENDIF




@명중판정(ARG)
#FUNCTION
#DIM DYNAMIC 판정변수
#DIM DYNAMIC 시전자운
#DIM DYNAMIC 운보너스
판정변수 = RAND:100 + 1
시전자운 = ARG능력치(T_시전자,"운")
IF T_대상2 != 0
    ;전투중일때 운에 영향받게
    SELECTCASE 시전자운/10
        CASE 0
            운보너스 += -2
        CASE 1 TO 2
            운보너스 += 0
        CASE 3 TO 4
            운보너스 += 1
        CASE 5 TO 6
            운보너스 += 2
        CASE 7 TO 8
            운보너스 += 3
        CASE 9 TO 10
            운보너스 += 4
        CASE 11 TO 12
            운보너스 += 5
        CASE 13 TO 14
            운보너스 += 6
        CASE 15 TO 16
            운보너스 += 7
        CASE 17 TO 18
            운보너스 += 8
        CASE 19 TO 20
            운보너스 += 9
        CASE IS >= 21
            운보너스 += 10
    ENDSELECT
    IF ARG + 운보너스 >= 100
        운보너스 -= (ARG + 운보너스) - 100
    ENDIF
ENDIF
IF ARG+운보너스 > 판정변수
    RETURNF 1
ELSE
    RETURNF 0
ENDIF

@T_해주(ARG,ARG:1,상태이상)
#DIMS 상태이상
IF 상태이상 == "모두"
    IF ARG:1 == 0
        CALL TB_TYPERESET(ARG,-1,-1)
    ELSE
        CALL TB_TYPERESET(ARG,-1,ARG:1)
    ENDIF
ELSEIF 상태이상 == "출혈"
    CALL TB_TYPERESET(ARG,TCV_출혈,ARG:1)
ELSEIF 상태이상 == "실명"
    CALL TB_TYPERESET(ARG,TCV_실명,ARG:1)
ELSEIF 상태이상 == "기절"
    CALL TB_TYPERESET(ARG,TCV_기절,ARG:1)
ELSEIF 상태이상 == "침묵"
    CALL TB_TYPERESET(ARG,TCV_침묵,ARG:1)
ELSEIF 상태이상 == "혼란"
    CALL TB_TYPERESET(ARG,TCV_혼란,ARG:1)
ELSEIF 상태이상 == "취약"
    CALL TB_TYPERESET(ARG,TCV_취약,ARG:1)
ELSEIF 상태이상 == "독"
    CALL TB_TYPERESET(ARG,TCV_독,ARG:1)
ELSEIF 상태이상 == "저주"
    CALL TB_TYPERESET(ARG,TCV_저주,ARG:1)
ELSEIF 상태이상 == "약화"
    CALL TB_TYPERESET(ARG,TCV_약화,ARG:1)
ELSEIF 상태이상 == "실명"
    CALL TB_TYPERESET(ARG,TCV_실명,ARG:1)
ENDIF
RETURN RESULT

@행동기회여부(ARG,ARG:1)
#FUNCTION
IF ARG:1 == T_통상행동
    RETURNF T_행동기회:ARG:T_통상행동
ELSEIF ARG:1 == T_이동행동
    RETURNF T_행동기회:ARG:T_이동행동
ENDIF

@행동기회소모(ARG,ARG:1)
IF ARG:1 == T_통상행동
    T_행동기회:ARG:T_통상행동 --
ELSEIF ARG:1 == T_이동행동
    T_행동기회:ARG:T_이동행동 --
ENDIF